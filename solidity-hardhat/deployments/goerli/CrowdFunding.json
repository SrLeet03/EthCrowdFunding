{
  "address": "0xf4dfd37BeBB0A223e45B59207A0633b2BE986691",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "campaginId",
          "type": "uint256"
        }
      ],
      "name": "CampaignCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAllCampaignOfOwner",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd62159b1b67ef0b72ca7eaef147718866bc5d8a432ec19d469ddb10d08e6aca7",
  "receipt": {
    "to": null,
    "from": "0x918fd2c5991feAc1553DD783161eCA6E15b1AbcD",
    "contractAddress": "0xf4dfd37BeBB0A223e45B59207A0633b2BE986691",
    "transactionIndex": 2,
    "gasUsed": "1701311",
    "logsBloom": "0x
    "blockHash": "0x15f947de85a43ffc0d427d7d2f8216d523e103bf857588c0916d795460ed63e2",
    "transactionHash": "0xd62159b1b67ef0b72ca7eaef147718866bc5d8a432ec19d469ddb10d08e6aca7",
    "logs": [],
    "blockNumber": 8500070,
    "cumulativeGasUsed": "5986147",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "4d797fcab4755c4a2e70eb68c6a4980b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaginId\",\"type\":\"uint256\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAllCampaignOfOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunding.sol\":\"CrowdFunding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Campaign.sol\":{\"content\":\"// // SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./Stake.sol\\\";\\n\\nerror Campaign__SendMinFund();\\nerror Campaign__NotOwner();\\nerror Campaign__NotEnoughToWithdraw();\\nerror Campaign__RequestIsUnderProcess();\\nerror Campaign__RequestRejected();\\nerror Campaign__NotAnEligiableContributer();\\n\\ncontract Campaign is Stake {\\n    mapping(address => uint256) public s_contributerFund;\\n    uint256 private immutable i_campaignGoal;\\n    uint256 private immutable i_minContribution;\\n    uint256 private s_TotalFunded;\\n    address private s_owner;\\n    Request[] private s_requests;\\n    address[] private s_contributers;\\n\\n    event FundWithdrawed(uint256 amountWithdrawed);\\n    event OwnershipTransfered(address from, address to);\\n    event FundTransfered(address from, uint256 fundedAmount);\\n    event RequestApplied(uint256 requestIndex);\\n    event RequestResult(uint256 requestIndex, bool approved);\\n\\n    constructor(uint256 campaignGoal, uint256 minContribution) {\\n        i_campaignGoal = campaignGoal;\\n        i_minContribution = minContribution;\\n        s_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != s_owner) {\\n            revert Campaign__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    modifier permissionIssued(uint256 requestIndex) {\\n        if (\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n            CampaignLib.permission.PROCESSING\\n        ) {\\n            revert Campaign__RequestIsUnderProcess();\\n        }\\n        if (\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n            CampaignLib.permission.REJECTED\\n        ) {\\n            revert Campaign__RequestRejected();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyEligiableContributers(\\n        uint256 minContribution,\\n        address contributer\\n    ) {\\n        if (s_contributerFund[contributer] < minContribution) {\\n            revert Campaign__NotAnEligiableContributer();\\n        }\\n        _;\\n    }\\n\\n    function contribute() public payable {\\n        if (msg.value < i_minContribution) {\\n            revert Campaign__SendMinFund();\\n        }\\n        (bool send, ) = address(this).call{value: msg.value}(\\\"\\\");\\n\\n        emit FundTransfered(msg.sender, msg.value);\\n\\n        s_contributerFund[msg.sender] += msg.value;\\n        s_TotalFunded += msg.value;\\n        s_contributers.push(msg.sender);\\n    }\\n\\n    function withdraw(\\n        uint256 requestIndex\\n    ) public payable onlyOwner permissionIssued(requestIndex) {\\n        uint256 amount = getRequestedAmount(s_requests[requestIndex]);\\n        if (address(this).balance < amount) {\\n            revert Campaign__NotEnoughToWithdraw();\\n        }\\n        (bool sent, ) = s_owner.call{value: amount}(\\\"\\\");\\n        setRecieved(s_requests[requestIndex]);\\n        emit FundWithdrawed(amount);\\n    }\\n\\n    function makeRequest(\\n        uint256 _durationOfRequest,\\n        uint256 _withdrawAmount,\\n        uint256 _minContributionToVote\\n    ) public onlyOwner {\\n        // Stake happens here\\n\\n        Request storage request = s_requests.push();\\n        request.minContributionToVote = _minContributionToVote;\\n        request.durationOfRequest = _durationOfRequest;\\n        request.requestedAmount = _withdrawAmount;\\n        request.requestedTime = block.timestamp;\\n        request.totalAcceptVote = 0;\\n        request.totalRejectVote = 0;\\n        request.amountRecieved = false;\\n        request.currentStatus = CampaignLib.permission.PROCESSING;\\n        emit RequestApplied(s_requests.length);\\n    }\\n\\n    function stakeInRequest(uint256 requestId, CampaignLib.vote myVote) public {\\n        stake(s_requests[requestId], myVote);\\n    }\\n\\n    function executeResult(uint256 requestIndex) public {\\n        result(s_requests[requestIndex]);\\n\\n        emit RequestResult(\\n            requestIndex,\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n                CampaignLib.permission.ACCEPTED\\n        );\\n    }\\n\\n    // Getter and setter functions\\n\\n    function getContributors() public view returns (address[] memory) {\\n        return s_contributers;\\n    }\\n\\n    function getTotalFund() public view returns (uint256) {\\n        return s_TotalFunded;\\n    }\\n\\n    function getFundByAddress(\\n        address contributer\\n    ) public view returns (uint256) {\\n        return s_contributerFund[contributer];\\n    }\\n\\n    function getOwnerAddress() public view returns (address) {\\n        return s_owner;\\n    }\\n\\n    function transferOwnerShip(address to) public onlyOwner {\\n        s_owner = to;\\n        emit OwnershipTransfered(msg.sender, to);\\n    }\\n\\n    function getCurrentFundInContract() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getContributorsFundAmount(\\n        address contributerAddress\\n    ) public view returns (uint256) {\\n        return s_contributerFund[contributerAddress];\\n    }\\n\\n    function getCampaignGoal() public view returns (uint256) {\\n        return i_campaignGoal;\\n    }\\n}\\n\",\"keccak256\":\"0x2b60fa8dfa4b0b4a9f0d039868055a8e812d35d371945f5602872dc0769e17d8\",\"license\":\"MIT\"},\"contracts/CampaignLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nlibrary CampaignLib {\\r\\n    enum permission {\\r\\n        PROCESSING,\\r\\n        ACCEPTED,\\r\\n        REJECTED\\r\\n    }\\r\\n\\r\\n    enum vote {\\r\\n        ACCEPT,\\r\\n        REJECT\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x63fd4e3243295646d1ae97f617eb1c0000ba63f7c0792e8416f0ac4b23b10292\",\"license\":\"MIT\"},\"contracts/CrowdFunding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\ncontract CrowdFunding {\\r\\n    mapping(address => Campaign[]) private s_campaigns;\\r\\n    address[] private s_campaignCreaters;\\r\\n\\r\\n    event CampaignCreated(address campaignCreator, uint256 campaginId);\\r\\n\\r\\n    function createCampaign(\\r\\n        uint256 _campaignGoal,\\r\\n        uint256 _minContribution\\r\\n    ) public {\\r\\n        Campaign campaign = new Campaign(_campaignGoal, _minContribution);\\r\\n        s_campaigns[msg.sender].push(campaign);\\r\\n        s_campaignCreaters.push(msg.sender);\\r\\n\\r\\n        emit CampaignCreated(msg.sender, s_campaigns[msg.sender].length);\\r\\n    }\\r\\n\\r\\n    function getCampaign(\\r\\n        address owner,\\r\\n        uint256 campaignId\\r\\n    ) public view returns (address) {\\r\\n        return address(s_campaigns[owner][campaignId]);\\r\\n    }\\r\\n\\r\\n    function getAllCampaignOfOwner(\\r\\n        address owner\\r\\n    ) public view returns (address[] memory) {\\r\\n        uint256 totalCampaign = s_campaigns[owner].length;\\r\\n        address[] memory campaigns = new address[](totalCampaign);\\r\\n        for (uint i = 0; i < totalCampaign; i++) {\\r\\n            campaigns[i] = address(s_campaigns[owner][i]);\\r\\n        }\\r\\n        return campaigns;\\r\\n    }\\r\\n\\r\\n    // Implement a function to get s_campagins\\r\\n    // function getAllCampaign() public view returns () {\\r\\n\\r\\n    // }\\r\\n}\\r\\n\",\"keccak256\":\"0x1ea84f10acba1034223be7eecc4ee9769862d343c63ee7b45a9e4d6ea769f45a\",\"license\":\"MIT\"},\"contracts/Stake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./CampaignLib.sol\\\";\\r\\n\\r\\n// TO DO\\r\\n//\\r\\n// Start the stake event\\r\\n// contributers can vote\\r\\n// End the event\\r\\n// Send the result and withdraw if needed\\r\\n\\r\\nerror Stake__DeadlineNotReached();\\r\\nerror Stake__DeadLineReached();\\r\\n\\r\\ncontract Stake {\\r\\n    struct Request {\\r\\n        mapping(address => bool) contributersVoted;\\r\\n        uint256 minContributionToVote;\\r\\n        uint256 durationOfRequest;\\r\\n        uint256 requestedAmount;\\r\\n        uint256 requestedTime;\\r\\n        // Voting variables\\r\\n        uint256 totalAcceptVote;\\r\\n        uint256 totalRejectVote;\\r\\n        // status\\r\\n        CampaignLib.permission currentStatus;\\r\\n        bool amountRecieved;\\r\\n    }\\r\\n\\r\\n    modifier deadlineReached(Request storage request, bool requireReached) {\\r\\n        uint256 timeRemaining = timeLeft(request);\\r\\n        if (requireReached) {\\r\\n            if (timeRemaining > 0) {\\r\\n                revert Stake__DeadlineNotReached();\\r\\n            }\\r\\n            // require(timeRemaining == 0, \\\"Deadline has not reached\\\");\\r\\n        } else {\\r\\n            if (timeRemaining == 0) {\\r\\n                revert Stake__DeadLineReached();\\r\\n            }\\r\\n            // require(timeRemaining > 0, \\\"Deadline is already reached\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Add a modifier if all the contributers voted\\r\\n\\r\\n    function stake(\\r\\n        Request storage request,\\r\\n        CampaignLib.vote myVote\\r\\n    ) internal deadlineReached(request, false) {\\r\\n        if (myVote == CampaignLib.vote.ACCEPT) {\\r\\n            request.totalAcceptVote += 1;\\r\\n        } else {\\r\\n            request.totalRejectVote += 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Make a function that gets call for chainlink\\r\\n\\r\\n    function result(\\r\\n        Request storage request\\r\\n    ) internal deadlineReached(request, true) {\\r\\n        if (request.totalAcceptVote > request.totalRejectVote) {\\r\\n            request.currentStatus = CampaignLib.permission.ACCEPTED;\\r\\n        } else {\\r\\n            request.currentStatus = CampaignLib.permission.REJECTED;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function timeLeft(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256 timeleft) {\\r\\n        uint256 deadline = request.requestedTime + request.durationOfRequest;\\r\\n        if (block.timestamp >= deadline) {\\r\\n            return 0;\\r\\n        } else {\\r\\n            return deadline - block.timestamp;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCurrentStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n\\r\\n    function getRequestedAmount(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256) {\\r\\n        return request.requestedAmount;\\r\\n    }\\r\\n\\r\\n    function setRecieved(Request storage request) internal {\\r\\n        request.amountRecieved = true;\\r\\n    }\\r\\n\\r\\n    function getMinimumContribution(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256) {\\r\\n        return request.minContributionToVote;\\r\\n    }\\r\\n\\r\\n    function getPermissionStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x06a642d401957954ba29cdb492857df4cbdafe5896d47c182c124a71a2a7f33e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611df5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301104849146100465780632250226814610076578063b08328b414610092575b600080fd5b610060600480360381019061005b91906104f8565b6100c2565b60405161006d91906105e3565b60405180910390f35b610090600480360381019061008b919061063b565b610248565b005b6100ac60048036038101906100a7919061067b565b610403565b6040516100b991906106ca565b60405180910390f35b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff811115610126576101256106e5565b5b6040519080825280602002602001820160405280156101545781602001602082028036833780820191505090505b50905060005b8281101561023d576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106101b2576101b1610714565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106101f0576101ef610714565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061023590610772565b91505061015a565b508092505050919050565b6000828260405161025890610488565b6102639291906107c9565b604051809103906000f08015801561027f573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffc5b9d1c2c1134048e1792e3ae27d4eee04f460d341711c7088000d2ca218621336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506040516103f69291906107f2565b60405180910390a1505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061045557610454610714565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6115a48061081c83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104c58261049a565b9050919050565b6104d5816104ba565b81146104e057600080fd5b50565b6000813590506104f2816104cc565b92915050565b60006020828403121561050e5761050d610495565b5b600061051c848285016104e3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61055a816104ba565b82525050565b600061056c8383610551565b60208301905092915050565b6000602082019050919050565b600061059082610525565b61059a8185610530565b93506105a583610541565b8060005b838110156105d65781516105bd8882610560565b97506105c883610578565b9250506001810190506105a9565b5085935050505092915050565b600060208201905081810360008301526105fd8184610585565b905092915050565b6000819050919050565b61061881610605565b811461062357600080fd5b50565b6000813590506106358161060f565b92915050565b6000806040838503121561065257610651610495565b5b600061066085828601610626565b925050602061067185828601610626565b9150509250929050565b6000806040838503121561069257610691610495565b5b60006106a0858286016104e3565b92505060206106b185828601610626565b9150509250929050565b6106c4816104ba565b82525050565b60006020820190506106df60008301846106bb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061077d82610605565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107af576107ae610743565b5b600182019050919050565b6107c381610605565b82525050565b60006040820190506107de60008301856107ba565b6107eb60208301846107ba565b9392505050565b600060408201905061080760008301856106bb565b61081460208301846107ba565b939250505056fe60c06040523480156200001157600080fd5b50604051620015a4380380620015a48339818101604052810190620000379190620000d0565b81608081815250508060a0818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000117565b600080fd5b6000819050919050565b620000aa8162000095565b8114620000b657600080fd5b50565b600081519050620000ca816200009f565b92915050565b60008060408385031215620000ea57620000e962000090565b5b6000620000fa85828601620000b9565b92505060206200010d85828601620000b9565b9150509250929050565b60805160a0516114676200013d6000396000610ad8015260006108cf01526114676000f3fe6080604052600436106100dd5760003560e01c80638863dd1a1161007f578063ba56585911610059578063ba5658591461028d578063c7abca47146102b6578063d7bb99ba146102f3578063e4d89cf6146102fd576100dd565b80638863dd1a1461020e5780639fd813e314610237578063af157c1914610262576100dd565b8063352dcefe116100bb578063352dcefe146101545780634b73212b1461017d5780637018a7af146101ba57806372b47b84146101e3576100dd565b806309d387da146100e25780630c4f65bd1461010d5780632e1a7d4d14610138575b600080fd5b3480156100ee57600080fd5b506100f761033a565b6040516101049190610f9a565b60405180910390f35b34801561011957600080fd5b50610122610342565b60405161012f9190610ff6565b60405180910390f35b610152600480360381019061014d9190611042565b61036c565b005b34801561016057600080fd5b5061017b6004803603810190610176919061106f565b61065e565b005b34801561018957600080fd5b506101a4600480360381019061019f91906110ee565b6107cd565b6040516101b19190610f9a565b60405180910390f35b3480156101c657600080fd5b506101e160048036038101906101dc9190611042565b610815565b005b3480156101ef57600080fd5b506101f86108cb565b6040516102059190610f9a565b60405180910390f35b34801561021a57600080fd5b50610235600480360381019061023091906110ee565b6108f3565b005b34801561024357600080fd5b5061024c6109f7565b6040516102599190610f9a565b60405180910390f35b34801561026e57600080fd5b50610277610a01565b60405161028491906111d9565b60405180910390f35b34801561029957600080fd5b506102b460048036038101906102af9190611220565b610a8f565b005b3480156102c257600080fd5b506102dd60048036038101906102d891906110ee565b610abe565b6040516102ea9190610f9a565b60405180910390f35b6102fb610ad6565b005b34801561030957600080fd5b50610324600480360381019061031f91906110ee565b610ca9565b6040516103319190610f9a565b60405180910390f35b600047905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600281111561040857610407611260565b5b6104326003838154811061041f5761041e61128f565b5b9060005260206000209060080201610cf1565b600281111561044457610443611260565b5b0361047b576040517fbae63cc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028081111561048e5761048d611260565b5b6104b8600383815481106104a5576104a461128f565b5b9060005260206000209060080201610cf1565b60028111156104ca576104c9611260565b5b03610501576040517f3db289e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061052d6003848154811061051a5761051961128f565b5b9060005260206000209060080201610d0c565b905080471015610569576040517f57d5fa0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516105b1906112ef565b60006040518083038185875af1925050503d80600081146105ee576040519150601f19603f3d011682016040523d82523d6000602084013e6105f3565b606091505b505090506106216003858154811061060e5761060d61128f565b5b9060005260206000209060080201610d1a565b7f78607c3338a50a97f0960b9ebb80a74d63115b7f462a4ea45c55abb0e5a36563826040516106509190610f9a565b60405180910390a150505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e5576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036001816001815401808255809150500390600052602060002090600802019050818160010181905550838160020181905550828160030181905550428160040181905550600081600501819055506000816006018190555060008160070160016101000a81548160ff02191690831515021790555060008160070160006101000a81548160ff0219169083600281111561078657610785611260565b5b02179055507fa5f7f4c8f7ba98ee825a5d8b155830a9dd4e7d29fcc431c6c3bcce27776c27846003805490506040516107bf9190610f9a565b60405180910390a150505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61083f6003828154811061082c5761082b61128f565b5b9060005260206000209060080201610d3a565b7f53d354f890b3877b85a588db153bbbce1a4b7c3fd4008a48294f78f13a13524a816001600281111561087557610874611260565b5b61089f6003858154811061088c5761088b61128f565b5b9060005260206000209060080201610cf1565b60028111156108b1576108b0611260565b5b146040516108c092919061131f565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097a576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6733826040516109ec929190611348565b60405180910390a150565b6000600154905090565b60606004805480602002602001604051908101604052809291908181526020018280548015610a8557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a3b575b5050505050905090565b610aba60038381548110610aa657610aa561128f565b5b906000526020600020906008020182610e41565b5050565b60006020528060005260406000206000915090505481565b7f0000000000000000000000000000000000000000000000000000000000000000341015610b30576040517f0cb8feec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1634604051610b56906112ef565b60006040518083038185875af1925050503d8060008114610b93576040519150601f19603f3d011682016040523d82523d6000602084013e610b98565b606091505b505090507f4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a23334604051610bcd929190611371565b60405180910390a1346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c2391906113c9565b925050819055503460016000828254610c3c91906113c9565b925050819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008160070160009054906101000a900460ff169050919050565b600081600301549050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b8060016000610d4883610f42565b90508115610d90576000811115610d8b576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dcb565b60008103610dca576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b836006015484600501541115610e0d5760018460070160006101000a81548160ff02191690836002811115610e0357610e02611260565b5b0217905550610e3b565b60028460070160006101000a81548160ff02191690836002811115610e3557610e34611260565b5b02179055505b50505050565b81600080610e4e83610f42565b90508115610e96576000811115610e91576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ed1565b60008103610ed0576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b60006001811115610ee557610ee4611260565b5b846001811115610ef857610ef7611260565b5b03610f1e576001856005016000828254610f1291906113c9565b92505081905550610f3b565b6001856006016000828254610f3391906113c9565b925050819055505b5050505050565b60008082600201548360040154610f5991906113c9565b9050804210610f6c576000915050610f7c565b4281610f7891906113fd565b9150505b919050565b6000819050919050565b610f9481610f81565b82525050565b6000602082019050610faf6000830184610f8b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fe082610fb5565b9050919050565b610ff081610fd5565b82525050565b600060208201905061100b6000830184610fe7565b92915050565b600080fd5b61101f81610f81565b811461102a57600080fd5b50565b60008135905061103c81611016565b92915050565b60006020828403121561105857611057611011565b5b60006110668482850161102d565b91505092915050565b60008060006060848603121561108857611087611011565b5b60006110968682870161102d565b93505060206110a78682870161102d565b92505060406110b88682870161102d565b9150509250925092565b6110cb81610fd5565b81146110d657600080fd5b50565b6000813590506110e8816110c2565b92915050565b60006020828403121561110457611103611011565b5b6000611112848285016110d9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61115081610fd5565b82525050565b60006111628383611147565b60208301905092915050565b6000602082019050919050565b60006111868261111b565b6111908185611126565b935061119b83611137565b8060005b838110156111cc5781516111b38882611156565b97506111be8361116e565b92505060018101905061119f565b5085935050505092915050565b600060208201905081810360008301526111f3818461117b565b905092915050565b6002811061120857600080fd5b50565b60008135905061121a816111fb565b92915050565b6000806040838503121561123757611236611011565b5b60006112458582860161102d565b92505060206112568582860161120b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b60006112d96000836112be565b91506112e4826112c9565b600082019050919050565b60006112fa826112cc565b9150819050919050565b60008115159050919050565b61131981611304565b82525050565b60006040820190506113346000830185610f8b565b6113416020830184611310565b9392505050565b600060408201905061135d6000830185610fe7565b61136a6020830184610fe7565b9392505050565b60006040820190506113866000830185610fe7565b6113936020830184610f8b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113d482610f81565b91506113df83610f81565b92508282019050808211156113f7576113f661139a565b5b92915050565b600061140882610f81565b915061141383610f81565b925082820390508181111561142b5761142a61139a565b5b9291505056fea26469706673582212209d51c5ada9ceacc6cf2e9f45fc5c6d03958d54b3f1ea7215f7d42bc3d69ff9c764736f6c63430008110033a26469706673582212201cc9daf8c901c4ce68c17f5805bf759a8a58b291f266cb0a03769e4c4664c9e164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301104849146100465780632250226814610076578063b08328b414610092575b600080fd5b610060600480360381019061005b91906104f8565b6100c2565b60405161006d91906105e3565b60405180910390f35b610090600480360381019061008b919061063b565b610248565b005b6100ac60048036038101906100a7919061067b565b610403565b6040516100b991906106ca565b60405180910390f35b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff811115610126576101256106e5565b5b6040519080825280602002602001820160405280156101545781602001602082028036833780820191505090505b50905060005b8281101561023d576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106101b2576101b1610714565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106101f0576101ef610714565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061023590610772565b91505061015a565b508092505050919050565b6000828260405161025890610488565b6102639291906107c9565b604051809103906000f08015801561027f573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffc5b9d1c2c1134048e1792e3ae27d4eee04f460d341711c7088000d2ca218621336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506040516103f69291906107f2565b60405180910390a1505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061045557610454610714565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6115a48061081c83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104c58261049a565b9050919050565b6104d5816104ba565b81146104e057600080fd5b50565b6000813590506104f2816104cc565b92915050565b60006020828403121561050e5761050d610495565b5b600061051c848285016104e3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61055a816104ba565b82525050565b600061056c8383610551565b60208301905092915050565b6000602082019050919050565b600061059082610525565b61059a8185610530565b93506105a583610541565b8060005b838110156105d65781516105bd8882610560565b97506105c883610578565b9250506001810190506105a9565b5085935050505092915050565b600060208201905081810360008301526105fd8184610585565b905092915050565b6000819050919050565b61061881610605565b811461062357600080fd5b50565b6000813590506106358161060f565b92915050565b6000806040838503121561065257610651610495565b5b600061066085828601610626565b925050602061067185828601610626565b9150509250929050565b6000806040838503121561069257610691610495565b5b60006106a0858286016104e3565b92505060206106b185828601610626565b9150509250929050565b6106c4816104ba565b82525050565b60006020820190506106df60008301846106bb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061077d82610605565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107af576107ae610743565b5b600182019050919050565b6107c381610605565b82525050565b60006040820190506107de60008301856107ba565b6107eb60208301846107ba565b9392505050565b600060408201905061080760008301856106bb565b61081460208301846107ba565b939250505056fe60c06040523480156200001157600080fd5b50604051620015a4380380620015a48339818101604052810190620000379190620000d0565b81608081815250508060a0818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000117565b600080fd5b6000819050919050565b620000aa8162000095565b8114620000b657600080fd5b50565b600081519050620000ca816200009f565b92915050565b60008060408385031215620000ea57620000e962000090565b5b6000620000fa85828601620000b9565b92505060206200010d85828601620000b9565b9150509250929050565b60805160a0516114676200013d6000396000610ad8015260006108cf01526114676000f3fe6080604052600436106100dd5760003560e01c80638863dd1a1161007f578063ba56585911610059578063ba5658591461028d578063c7abca47146102b6578063d7bb99ba146102f3578063e4d89cf6146102fd576100dd565b80638863dd1a1461020e5780639fd813e314610237578063af157c1914610262576100dd565b8063352dcefe116100bb578063352dcefe146101545780634b73212b1461017d5780637018a7af146101ba57806372b47b84146101e3576100dd565b806309d387da146100e25780630c4f65bd1461010d5780632e1a7d4d14610138575b600080fd5b3480156100ee57600080fd5b506100f761033a565b6040516101049190610f9a565b60405180910390f35b34801561011957600080fd5b50610122610342565b60405161012f9190610ff6565b60405180910390f35b610152600480360381019061014d9190611042565b61036c565b005b34801561016057600080fd5b5061017b6004803603810190610176919061106f565b61065e565b005b34801561018957600080fd5b506101a4600480360381019061019f91906110ee565b6107cd565b6040516101b19190610f9a565b60405180910390f35b3480156101c657600080fd5b506101e160048036038101906101dc9190611042565b610815565b005b3480156101ef57600080fd5b506101f86108cb565b6040516102059190610f9a565b60405180910390f35b34801561021a57600080fd5b50610235600480360381019061023091906110ee565b6108f3565b005b34801561024357600080fd5b5061024c6109f7565b6040516102599190610f9a565b60405180910390f35b34801561026e57600080fd5b50610277610a01565b60405161028491906111d9565b60405180910390f35b34801561029957600080fd5b506102b460048036038101906102af9190611220565b610a8f565b005b3480156102c257600080fd5b506102dd60048036038101906102d891906110ee565b610abe565b6040516102ea9190610f9a565b60405180910390f35b6102fb610ad6565b005b34801561030957600080fd5b50610324600480360381019061031f91906110ee565b610ca9565b6040516103319190610f9a565b60405180910390f35b600047905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600281111561040857610407611260565b5b6104326003838154811061041f5761041e61128f565b5b9060005260206000209060080201610cf1565b600281111561044457610443611260565b5b0361047b576040517fbae63cc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028081111561048e5761048d611260565b5b6104b8600383815481106104a5576104a461128f565b5b9060005260206000209060080201610cf1565b60028111156104ca576104c9611260565b5b03610501576040517f3db289e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061052d6003848154811061051a5761051961128f565b5b9060005260206000209060080201610d0c565b905080471015610569576040517f57d5fa0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516105b1906112ef565b60006040518083038185875af1925050503d80600081146105ee576040519150601f19603f3d011682016040523d82523d6000602084013e6105f3565b606091505b505090506106216003858154811061060e5761060d61128f565b5b9060005260206000209060080201610d1a565b7f78607c3338a50a97f0960b9ebb80a74d63115b7f462a4ea45c55abb0e5a36563826040516106509190610f9a565b60405180910390a150505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e5576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036001816001815401808255809150500390600052602060002090600802019050818160010181905550838160020181905550828160030181905550428160040181905550600081600501819055506000816006018190555060008160070160016101000a81548160ff02191690831515021790555060008160070160006101000a81548160ff0219169083600281111561078657610785611260565b5b02179055507fa5f7f4c8f7ba98ee825a5d8b155830a9dd4e7d29fcc431c6c3bcce27776c27846003805490506040516107bf9190610f9a565b60405180910390a150505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61083f6003828154811061082c5761082b61128f565b5b9060005260206000209060080201610d3a565b7f53d354f890b3877b85a588db153bbbce1a4b7c3fd4008a48294f78f13a13524a816001600281111561087557610874611260565b5b61089f6003858154811061088c5761088b61128f565b5b9060005260206000209060080201610cf1565b60028111156108b1576108b0611260565b5b146040516108c092919061131f565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097a576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6733826040516109ec929190611348565b60405180910390a150565b6000600154905090565b60606004805480602002602001604051908101604052809291908181526020018280548015610a8557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a3b575b5050505050905090565b610aba60038381548110610aa657610aa561128f565b5b906000526020600020906008020182610e41565b5050565b60006020528060005260406000206000915090505481565b7f0000000000000000000000000000000000000000000000000000000000000000341015610b30576040517f0cb8feec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1634604051610b56906112ef565b60006040518083038185875af1925050503d8060008114610b93576040519150601f19603f3d011682016040523d82523d6000602084013e610b98565b606091505b505090507f4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a23334604051610bcd929190611371565b60405180910390a1346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c2391906113c9565b925050819055503460016000828254610c3c91906113c9565b925050819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008160070160009054906101000a900460ff169050919050565b600081600301549050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b8060016000610d4883610f42565b90508115610d90576000811115610d8b576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dcb565b60008103610dca576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b836006015484600501541115610e0d5760018460070160006101000a81548160ff02191690836002811115610e0357610e02611260565b5b0217905550610e3b565b60028460070160006101000a81548160ff02191690836002811115610e3557610e34611260565b5b02179055505b50505050565b81600080610e4e83610f42565b90508115610e96576000811115610e91576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ed1565b60008103610ed0576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b60006001811115610ee557610ee4611260565b5b846001811115610ef857610ef7611260565b5b03610f1e576001856005016000828254610f1291906113c9565b92505081905550610f3b565b6001856006016000828254610f3391906113c9565b925050819055505b5050505050565b60008082600201548360040154610f5991906113c9565b9050804210610f6c576000915050610f7c565b4281610f7891906113fd565b9150505b919050565b6000819050919050565b610f9481610f81565b82525050565b6000602082019050610faf6000830184610f8b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fe082610fb5565b9050919050565b610ff081610fd5565b82525050565b600060208201905061100b6000830184610fe7565b92915050565b600080fd5b61101f81610f81565b811461102a57600080fd5b50565b60008135905061103c81611016565b92915050565b60006020828403121561105857611057611011565b5b60006110668482850161102d565b91505092915050565b60008060006060848603121561108857611087611011565b5b60006110968682870161102d565b93505060206110a78682870161102d565b92505060406110b88682870161102d565b9150509250925092565b6110cb81610fd5565b81146110d657600080fd5b50565b6000813590506110e8816110c2565b92915050565b60006020828403121561110457611103611011565b5b6000611112848285016110d9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61115081610fd5565b82525050565b60006111628383611147565b60208301905092915050565b6000602082019050919050565b60006111868261111b565b6111908185611126565b935061119b83611137565b8060005b838110156111cc5781516111b38882611156565b97506111be8361116e565b92505060018101905061119f565b5085935050505092915050565b600060208201905081810360008301526111f3818461117b565b905092915050565b6002811061120857600080fd5b50565b60008135905061121a816111fb565b92915050565b6000806040838503121561123757611236611011565b5b60006112458582860161102d565b92505060206112568582860161120b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b60006112d96000836112be565b91506112e4826112c9565b600082019050919050565b60006112fa826112cc565b9150819050919050565b60008115159050919050565b61131981611304565b82525050565b60006040820190506113346000830185610f8b565b6113416020830184611310565b9392505050565b600060408201905061135d6000830185610fe7565b61136a6020830184610fe7565b9392505050565b60006040820190506113866000830185610fe7565b6113936020830184610f8b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113d482610f81565b91506113df83610f81565b92508282019050808211156113f7576113f661139a565b5b92915050565b600061140882610f81565b915061141383610f81565b925082820390508181111561142b5761142a61139a565b5b9291505056fea26469706673582212209d51c5ada9ceacc6cf2e9f45fc5c6d03958d54b3f1ea7215f7d42bc3d69ff9c764736f6c63430008110033a26469706673582212201cc9daf8c901c4ce68c17f5805bf759a8a58b291f266cb0a03769e4c4664c9e164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 473,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaigns",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_contract(Campaign)454)dyn_storage)"
      },
      {
        "astId": 476,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaignCreaters",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(Campaign)454)dyn_storage": {
        "base": "t_contract(Campaign)454",
        "encoding": "dynamic_array",
        "label": "contract Campaign[]",
        "numberOfBytes": "32"
      },
      "t_contract(Campaign)454": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(Campaign)454)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(Campaign)454)dyn_storage"
      }
    }
  }
}