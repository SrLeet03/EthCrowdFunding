{
  "address": "0x2404e740737bf351416D9949859875B89c8D64C0",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "campaginId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAllCampaignOfOwner",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalCampaign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb41be764c520f96fed3c58d3ffdf122b79a361a8f4025d9cfc73631bab6d73b8",
  "receipt": {
    "to": null,
    "from": "0x918fd2c5991feAc1553DD783161eCA6E15b1AbcD",
    "contractAddress": "0x2404e740737bf351416D9949859875B89c8D64C0",
    "transactionIndex": 0,
    "gasUsed": "2171004",
    "logsBloom": "0x
    "blockHash": "0x429bb4af8fedea58007ed98c11d65ae85d8e809b61668d7d09d26616d589ad44",
    "transactionHash": "0xb41be764c520f96fed3c58d3ffdf122b79a361a8f4025d9cfc73631bab6d73b8",
    "logs": [],
    "blockNumber": 581275,
    "cumulativeGasUsed": "2171004",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 8,
  "solcInputHash": "a54029a1a9dff1570a890843e0a6ad6c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaginId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAllCampaignOfOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCampaign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunding.sol\":\"CrowdFunding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Campaign.sol\":{\"content\":\"// // SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./Stake.sol\\\";\\r\\n\\r\\nerror Campaign__SendMinFund(uint256 value, uint256 minContribution);\\r\\nerror Campaign__NotOwner(address sender, address owner);\\r\\nerror Campaign__NotEnoughToWithdraw(\\r\\n    uint256 amountNeedToWithdraw,\\r\\n    uint256 contractBalance\\r\\n);\\r\\nerror Campaign__RequestIsUnderProcess();\\r\\nerror Campaign__RequestRejected();\\r\\nerror Campaign__ContributionTransactionFailed();\\r\\nerror Campaign__WithdrawTransactionFailed();\\r\\nerror Campaign__NoEnoughAmount();\\r\\nerror Campaign__NotAContributer();\\r\\n\\r\\ncontract Campaign is Stake {\\r\\n    mapping(address => uint256) public s_contributerFund;\\r\\n    uint256 private immutable i_campaignGoal;\\r\\n    uint256 private immutable i_minContribution;\\r\\n    uint256 private s_TotalFunded;\\r\\n    address private s_owner;\\r\\n    Request[] private s_requests;\\r\\n    address[] private s_contributers;\\r\\n\\r\\n    event FundWithdrawed(uint256 amountWithdrawed);\\r\\n    event OwnershipTransfered(address from, address to);\\r\\n    event FundTransfered(address from, uint256 fundedAmount);\\r\\n    event RequestApplied(uint256 requestIndex);\\r\\n    event RequestResult(uint256 requestIndex, bool approved);\\r\\n\\r\\n    constructor(uint256 campaignGoal, uint256 minContribution) {\\r\\n        i_campaignGoal = campaignGoal;\\r\\n        i_minContribution = minContribution;\\r\\n        s_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != s_owner) {\\r\\n            revert Campaign__NotOwner(msg.sender, s_owner);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyContributers() {\\r\\n        if (s_contributerFund[msg.sender] == 0) {\\r\\n            revert Campaign__NotAContributer();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier permissionIssued(uint256 requestIndex) {\\r\\n        executeResult(requestIndex);\\r\\n        if (\\r\\n            getPermissionStatus(s_requests[requestIndex]) ==\\r\\n            CampaignLib.permission.PROCESSING\\r\\n        ) {\\r\\n            revert Campaign__RequestIsUnderProcess();\\r\\n        }\\r\\n        if (\\r\\n            getPermissionStatus(s_requests[requestIndex]) ==\\r\\n            CampaignLib.permission.REJECTED\\r\\n        ) {\\r\\n            revert Campaign__RequestRejected();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function contribute() public payable {\\r\\n        if (msg.value < i_minContribution) {\\r\\n            revert Campaign__SendMinFund(msg.value, i_minContribution);\\r\\n        }\\r\\n        (bool sent, ) = address(this).call{value: msg.value}(\\\"\\\");\\r\\n\\r\\n        if (!sent) {\\r\\n            revert Campaign__ContributionTransactionFailed();\\r\\n        }\\r\\n\\r\\n        emit FundTransfered(msg.sender, msg.value);\\r\\n\\r\\n        s_contributerFund[msg.sender] += msg.value;\\r\\n        s_TotalFunded += msg.value;\\r\\n        s_contributers.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw(\\r\\n        uint256 requestIndex\\r\\n    ) public payable onlyOwner permissionIssued(requestIndex) {\\r\\n        uint256 amount = getRequestedAmount(s_requests[requestIndex]);\\r\\n        if (address(this).balance < amount) {\\r\\n            revert Campaign__NotEnoughToWithdraw(amount, address(this).balance);\\r\\n        }\\r\\n        (bool sent, ) = s_owner.call{value: amount}(\\\"\\\");\\r\\n\\r\\n        if (!sent) {\\r\\n            revert Campaign__WithdrawTransactionFailed();\\r\\n        }\\r\\n\\r\\n        setRecieved(s_requests[requestIndex]);\\r\\n        emit FundWithdrawed(amount);\\r\\n    }\\r\\n\\r\\n    function makeRequest(\\r\\n        uint256 _durationOfRequest,\\r\\n        uint256 _withdrawAmount\\r\\n    ) public onlyOwner returns (uint256) {\\r\\n        // Stake happens here\\r\\n\\r\\n        Request storage request = s_requests.push();\\r\\n        request.durationOfRequest = _durationOfRequest;\\r\\n        request.requestedAmount = _withdrawAmount;\\r\\n        request.requestedTime = block.timestamp;\\r\\n        request.totalAcceptVote = 0;\\r\\n        request.totalRejectVote = 0;\\r\\n        request.amountRecieved = false;\\r\\n        request.campaignAddress = address(this);\\r\\n        request.currentStatus = CampaignLib.permission.PROCESSING;\\r\\n        emit RequestApplied(s_requests.length - 1);\\r\\n\\r\\n        return (s_requests.length - 1);\\r\\n    }\\r\\n\\r\\n    function stakeInRequest(uint256 requestId, CampaignLib.vote myVote) public {\\r\\n        uint256 weightage = calcualtePercent(\\r\\n            s_contributerFund[msg.sender],\\r\\n            10000,\\r\\n            s_TotalFunded\\r\\n        );\\r\\n        stake(s_requests[requestId], myVote, msg.sender, weightage);\\r\\n    }\\r\\n\\r\\n    function executeResult(uint256 requestIndex) public {\\r\\n        result(s_requests[requestIndex]);\\r\\n\\r\\n        emit RequestResult(\\r\\n            requestIndex,\\r\\n            getPermissionStatus(s_requests[requestIndex]) ==\\r\\n                CampaignLib.permission.ACCEPTED\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // Getter and setter functions\\r\\n\\r\\n    function getContributors() public view returns (address[] memory) {\\r\\n        return s_contributers;\\r\\n    }\\r\\n\\r\\n    function getTotalFund() public view returns (uint256) {\\r\\n        return s_TotalFunded;\\r\\n    }\\r\\n\\r\\n    function getFundByAddress(\\r\\n        address contributer\\r\\n    ) public view returns (uint256) {\\r\\n        return s_contributerFund[contributer];\\r\\n    }\\r\\n\\r\\n    function getOwnerAddress() public view returns (address) {\\r\\n        return s_owner;\\r\\n    }\\r\\n\\r\\n    function transferOwnerShip(address to) public onlyOwner {\\r\\n        s_owner = to;\\r\\n        emit OwnershipTransfered(msg.sender, to);\\r\\n    }\\r\\n\\r\\n    function getCurrentFundInContract() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getContributorsFundAmount(\\r\\n        address contributerAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return s_contributerFund[contributerAddress];\\r\\n    }\\r\\n\\r\\n    function getCampaignGoal() public view returns (uint256) {\\r\\n        return i_campaignGoal;\\r\\n    }\\r\\n\\r\\n    function getTotalContributers() public view returns (uint256) {\\r\\n        return s_contributers.length;\\r\\n    }\\r\\n\\r\\n    function calcualtePercent(\\r\\n        uint256 amount,\\r\\n        uint256 bps,\\r\\n        uint256 totalAmount\\r\\n    ) internal pure returns (uint256) {\\r\\n        if (amount * bps < totalAmount) {\\r\\n            revert Campaign__NoEnoughAmount();\\r\\n        }\\r\\n        return (amount * bps) / totalAmount;\\r\\n    }\\r\\n\\r\\n    function getRequestStatus(uint256 requestId) public view returns (uint32) {\\r\\n        return uint32(s_requests[requestId].currentStatus);\\r\\n    }\\r\\n\\r\\n    bool amountRecieved;\\r\\n\\r\\n    function getRequestInfo(\\r\\n        uint256 requestId\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (uint256, uint256, uint256, uint32, uint256, uint256, bool)\\r\\n    {\\r\\n        return (\\r\\n            s_requests[requestId].requestedAmount,\\r\\n            s_requests[requestId].requestedTime,\\r\\n            s_requests[requestId].durationOfRequest,\\r\\n            uint32(s_requests[requestId].currentStatus),\\r\\n            s_requests[requestId].totalAcceptVote,\\r\\n            s_requests[requestId].totalRejectVote,\\r\\n            s_requests[requestId].amountRecieved\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x986ecf024906823c0349c790887d282924ccfddeb47e6793b149d1fa385b636d\",\"license\":\"MIT\"},\"contracts/CampaignLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nlibrary CampaignLib {\\r\\n    enum permission {\\r\\n        PROCESSING,\\r\\n        ACCEPTED,\\r\\n        REJECTED\\r\\n    }\\r\\n\\r\\n    enum vote {\\r\\n        ACCEPT,\\r\\n        REJECT\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x63fd4e3243295646d1ae97f617eb1c0000ba63f7c0792e8416f0ac4b23b10292\",\"license\":\"MIT\"},\"contracts/CrowdFunding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\ncontract CrowdFunding {\\r\\n    mapping(address => Campaign[]) private s_campaigns;\\r\\n    address[] private s_campaignCreaters;\\r\\n    uint256 private s_totalCampaign;\\r\\n\\r\\n    event CampaignCreated(\\r\\n        address campaignCreator,\\r\\n        uint256 campaginId,\\r\\n        address campaignAddress\\r\\n    );\\r\\n\\r\\n    function createCampaign(\\r\\n        uint256 _campaignGoal,\\r\\n        uint256 _minContribution\\r\\n    ) public {\\r\\n        Campaign campaign = new Campaign(_campaignGoal, _minContribution);\\r\\n        campaign.transferOwnerShip(msg.sender);\\r\\n\\r\\n        s_campaigns[msg.sender].push(campaign);\\r\\n        s_campaignCreaters.push(msg.sender);\\r\\n\\r\\n        s_totalCampaign += 1;\\r\\n\\r\\n        emit CampaignCreated(\\r\\n            msg.sender,\\r\\n            s_campaigns[msg.sender].length - 1,\\r\\n            address(campaign)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getCampaign(\\r\\n        address owner,\\r\\n        uint256 campaignId\\r\\n    ) public view returns (address) {\\r\\n        return address(s_campaigns[owner][campaignId]);\\r\\n    }\\r\\n\\r\\n    function getAllCampaignOfOwner(\\r\\n        address owner\\r\\n    ) public view returns (address[] memory) {\\r\\n        uint256 totalCampaign = s_campaigns[owner].length;\\r\\n        address[] memory campaigns = new address[](totalCampaign);\\r\\n        for (uint i = 0; i < totalCampaign; i++) {\\r\\n            campaigns[i] = address(s_campaigns[owner][i]);\\r\\n        }\\r\\n        return campaigns;\\r\\n    }\\r\\n\\r\\n    function getTotalCampaign() public view returns (uint256) {\\r\\n        return s_totalCampaign;\\r\\n    }\\r\\n\\r\\n    // Implement a function to get s_campagins\\r\\n    // function getAllCampaign() public view returns () {\\r\\n\\r\\n    // }\\r\\n}\\r\\n\",\"keccak256\":\"0xc9a8d8c97a120bd58c304a7588ac42c5118f5afdcee075033d2b7c644812ef5d\",\"license\":\"MIT\"},\"contracts/Stake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./CampaignLib.sol\\\";\\r\\n\\r\\n// TO DO\\r\\n//\\r\\n// Start the stake event\\r\\n// contributers can vote\\r\\n// End the event\\r\\n// Send the result and withdraw if needed\\r\\n//\\r\\n\\r\\nerror Stake__DeadlineNotReached();\\r\\nerror Stake__DeadLineReached();\\r\\nerror Stake__ContributerAlreadyVoted();\\r\\n\\r\\ncontract Stake {\\r\\n    struct Request {\\r\\n        mapping(address => bool) contributersVoted;\\r\\n        uint256 durationOfRequest;\\r\\n        uint256 requestedAmount;\\r\\n        uint256 requestedTime;\\r\\n        address campaignAddress;\\r\\n        // Voting variables\\r\\n        uint256 totalAcceptVote;\\r\\n        uint256 totalRejectVote;\\r\\n        // status\\r\\n        CampaignLib.permission currentStatus;\\r\\n        bool amountRecieved;\\r\\n    }\\r\\n\\r\\n    modifier deadlineReached(Request storage request, bool requireReached) {\\r\\n        uint256 timeRemaining = timeLeft(request);\\r\\n        if (requireReached) {\\r\\n            if (timeRemaining > 0) {\\r\\n                revert Stake__DeadlineNotReached();\\r\\n            }\\r\\n            // require(timeRemaining == 0, \\\"Deadline has not reached\\\");\\r\\n        } else {\\r\\n            if (timeRemaining == 0) {\\r\\n                revert Stake__DeadLineReached();\\r\\n            }\\r\\n            // require(timeRemaining > 0, \\\"Deadline is already reached\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Add a modifier if all the contributers voted\\r\\n\\r\\n    function stake(\\r\\n        Request storage request,\\r\\n        CampaignLib.vote myVote,\\r\\n        address contributer,\\r\\n        uint256 weightage\\r\\n    ) internal deadlineReached(request, false) {\\r\\n        if (request.contributersVoted[contributer]) {\\r\\n            revert Stake__ContributerAlreadyVoted();\\r\\n        }\\r\\n        request.contributersVoted[contributer] = true;\\r\\n        if (myVote == CampaignLib.vote.ACCEPT) {\\r\\n            request.totalAcceptVote += weightage;\\r\\n        } else {\\r\\n            request.totalRejectVote += weightage;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Make a function that gets call for chainlink\\r\\n\\r\\n    function result(\\r\\n        Request storage request\\r\\n    ) internal deadlineReached(request, true) {\\r\\n        if (request.totalAcceptVote > request.totalRejectVote) {\\r\\n            request.currentStatus = CampaignLib.permission.ACCEPTED;\\r\\n        } else {\\r\\n            request.currentStatus = CampaignLib.permission.REJECTED;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function timeLeft(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256 timeleft) {\\r\\n        uint256 deadline = request.requestedTime + request.durationOfRequest;\\r\\n        if (block.timestamp >= deadline) {\\r\\n            return 0;\\r\\n        } else {\\r\\n            return deadline - block.timestamp;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCurrentStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n\\r\\n    function getRequestedAmount(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256) {\\r\\n        return request.requestedAmount;\\r\\n    }\\r\\n\\r\\n    function setRecieved(Request storage request) internal {\\r\\n        request.amountRecieved = true;\\r\\n    }\\r\\n\\r\\n    function getPermissionStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xee2d8e33326e8097a1c2fd0e780f397f82e20c6a70c5d275a3e9fe1eb0dd5558\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061267f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063011048491461005157806317d2997414610081578063225022681461009f578063b08328b4146100bb575b600080fd5b61006b600480360381019061006691906105be565b6100eb565b60405161007891906106a9565b60405180910390f35b610089610271565b60405161009691906106e4565b60405180910390f35b6100b960048036038101906100b4919061072b565b61027b565b005b6100d560048036038101906100d0919061076b565b6104c9565b6040516100e291906107ba565b60405180910390f35b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561014f5761014e6107d5565b5b60405190808252806020026020018201604052801561017d5781602001602082028036833780820191505090505b50905060005b82811015610266576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106101db576101da610804565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061021957610218610804565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061025e90610862565b915050610183565b508092505050919050565b6000600254905090565b6000828260405161028b9061054e565b6102969291906108aa565b604051809103906000f0801580156102b2573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16638863dd1a336040518263ffffffff1660e01b81526004016102ee91906107ba565b600060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b505050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002600082825461043591906108d3565b925050819055507fa01c8e2b0a81830c2e4e199b4cb98ece9d41443b7f9ef51cbb778f0fa13b019d3360016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506104ac9190610907565b836040516104bc9392919061093b565b60405180910390a1505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061051b5761051a610804565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611cd78061097383390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058b82610560565b9050919050565b61059b81610580565b81146105a657600080fd5b50565b6000813590506105b881610592565b92915050565b6000602082840312156105d4576105d361055b565b5b60006105e2848285016105a9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61062081610580565b82525050565b60006106328383610617565b60208301905092915050565b6000602082019050919050565b6000610656826105eb565b61066081856105f6565b935061066b83610607565b8060005b8381101561069c5781516106838882610626565b975061068e8361063e565b92505060018101905061066f565b5085935050505092915050565b600060208201905081810360008301526106c3818461064b565b905092915050565b6000819050919050565b6106de816106cb565b82525050565b60006020820190506106f960008301846106d5565b92915050565b610708816106cb565b811461071357600080fd5b50565b600081359050610725816106ff565b92915050565b600080604083850312156107425761074161055b565b5b600061075085828601610716565b925050602061076185828601610716565b9150509250929050565b600080604083850312156107825761078161055b565b5b6000610790858286016105a9565b92505060206107a185828601610716565b9150509250929050565b6107b481610580565b82525050565b60006020820190506107cf60008301846107ab565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061086d826106cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361089f5761089e610833565b5b600182019050919050565b60006040820190506108bf60008301856106d5565b6108cc60208301846106d5565b9392505050565b60006108de826106cb565b91506108e9836106cb565b925082820190508082111561090157610900610833565b5b92915050565b6000610912826106cb565b915061091d836106cb565b925082820390508181111561093557610934610833565b5b92915050565b600060608201905061095060008301866107ab565b61095d60208301856106d5565b61096a60408301846107ab565b94935050505056fe60c06040523480156200001157600080fd5b5060405162001cd738038062001cd78339818101604052810190620000379190620000d0565b81608081815250508060a0818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000117565b600080fd5b6000819050919050565b620000aa8162000095565b8114620000b657600080fd5b50565b600081519050620000ca816200009f565b92915050565b60008060408385031215620000ea57620000e962000090565b5b6000620000fa85828601620000b9565b92505060206200010d85828601620000b9565b9150509250929050565b60805160a051611b936200014460003960008181610e9d0152610ec601526000610a160152611b936000f3fe6080604052600436106100fe5760003560e01c80639fd813e311610095578063c7abca4711610064578063c7abca471461032e578063d7bb99ba1461036b578063d8a4676f14610375578063e4d89cf6146103b2578063fd6bc8b8146103ef576100fe565b80639fd813e314610272578063af157c191461029d578063b93863df146102c8578063ba56585914610305576100fe565b80634b73212b116100d15780634b73212b146101b85780637018a7af146101f557806372b47b841461021e5780638863dd1a14610249576100fe565b806309d387da146101035780630b8160451461012e5780630c4f65bd146101715780632e1a7d4d1461019c575b600080fd5b34801561010f57600080fd5b5061011861041a565b6040516101259190611565565b60405180910390f35b34801561013a57600080fd5b50610155600480360381019061015091906115b1565b610422565b6040516101689796959493929190611618565b60405180910390f35b34801561017d57600080fd5b5061018661057c565b60405161019391906116c8565b60405180910390f35b6101b660048036038101906101b191906115b1565b6105a6565b005b3480156101c457600080fd5b506101df60048036038101906101da919061170f565b610914565b6040516101ec9190611565565b60405180910390f35b34801561020157600080fd5b5061021c600480360381019061021791906115b1565b61095c565b005b34801561022a57600080fd5b50610233610a12565b6040516102409190611565565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b919061170f565b610a3a565b005b34801561027e57600080fd5b50610287610b6d565b6040516102949190611565565b60405180910390f35b3480156102a957600080fd5b506102b2610b77565b6040516102bf91906117fa565b60405180910390f35b3480156102d457600080fd5b506102ef60048036038101906102ea919061181c565b610c05565b6040516102fc9190611565565b60405180910390f35b34801561031157600080fd5b5061032c60048036038101906103279190611881565b610e00565b005b34801561033a57600080fd5b506103556004803603810190610350919061170f565b610e83565b6040516103629190611565565b60405180910390f35b610373610e9b565b005b34801561038157600080fd5b5061039c600480360381019061039791906115b1565b6110d2565b6040516103a991906118c1565b60405180910390f35b3480156103be57600080fd5b506103d960048036038101906103d4919061170f565b611120565b6040516103e69190611565565b60405180910390f35b3480156103fb57600080fd5b50610404611168565b6040516104119190611565565b60405180910390f35b600047905090565b600080600080600080600060038881548110610441576104406118dc565b5b90600052602060002090600802016002015460038981548110610467576104666118dc565b5b90600052602060002090600802016003015460038a8154811061048d5761048c6118dc565b5b90600052602060002090600802016001015460038b815481106104b3576104b26118dc565b5b906000526020600020906008020160070160009054906101000a900460ff1660028111156104e4576104e361190b565b5b60038c815481106104f8576104f76118dc565b5b90600052602060002090600802016005015460038d8154811061051e5761051d6118dc565b5b90600052602060002090600802016006015460038e81548110610544576105436118dc565b5b906000526020600020906008020160070160019054906101000a900460ff169650965096509650965096509650919395979092949650565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c5733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fffa2d83c00000000000000000000000000000000000000000000000000000000815260040161065392919061193a565b60405180910390fd5b806106668161095c565b6000600281111561067a5761067961190b565b5b6106a460038381548110610691576106906118dc565b5b9060005260206000209060080201611175565b60028111156106b6576106b561190b565b5b036106ed576040517fbae63cc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280811115610700576106ff61190b565b5b61072a60038381548110610717576107166118dc565b5b9060005260206000209060080201611175565b600281111561073c5761073b61190b565b5b03610773576040517f3db289e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061079f6003848154811061078c5761078b6118dc565b5b9060005260206000209060080201611190565b9050804710156107e85780476040517fae7a822f0000000000000000000000000000000000000000000000000000000081526004016107df929190611963565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610830906119bd565b60006040518083038185875af1925050503d806000811461086d576040519150601f19603f3d011682016040523d82523d6000602084013e610872565b606091505b50509050806108ad576040517f4c3ac88a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108d7600385815481106108c4576108c36118dc565b5b906000526020600020906008020161119e565b7f78607c3338a50a97f0960b9ebb80a74d63115b7f462a4ea45c55abb0e5a36563826040516109069190611565565b60405180910390a150505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61098660038281548110610973576109726118dc565b5b90600052602060002090600802016111be565b7f53d354f890b3877b85a588db153bbbce1a4b7c3fd4008a48294f78f13a13524a81600160028111156109bc576109bb61190b565b5b6109e6600385815481106109d3576109d26118dc565b5b9060005260206000209060080201611175565b60028111156109f8576109f761190b565b5b14604051610a079291906119d2565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af05733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fffa2d83c000000000000000000000000000000000000000000000000000000008152600401610ae792919061193a565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee673382604051610b6292919061193a565b60405180910390a150565b6000600154905090565b60606004805480602002602001604051908101604052809291908181526020018280548015610bfb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bb1575b5050505050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cbd5733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fffa2d83c000000000000000000000000000000000000000000000000000000008152600401610cb492919061193a565b60405180910390fd5b600060036001816001815401808255809150500390600052602060002090600802019050838160010181905550828160020181905550428160030181905550600081600501819055506000816006018190555060008160070160016101000a81548160ff021916908315150217905550308160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548160ff02191690836002811115610d9857610d9761190b565b5b02179055507fa5f7f4c8f7ba98ee825a5d8b155830a9dd4e7d29fcc431c6c3bcce27776c27846001600380549050610dd09190611a2a565b604051610ddd9190611565565b60405180910390a16001600380549050610df79190611a2a565b91505092915050565b6000610e4f6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127106001546112c5565b9050610e7e60038481548110610e6857610e676118dc565b5b906000526020600020906008020183338461132c565b505050565b60006020528060005260406000206000915090505481565b7f0000000000000000000000000000000000000000000000000000000000000000341015610f2257347f00000000000000000000000000000000000000000000000000000000000000006040517f20accbee000000000000000000000000000000000000000000000000000000008152600401610f19929190611963565b60405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1634604051610f48906119bd565b60006040518083038185875af1925050503d8060008114610f85576040519150601f19603f3d011682016040523d82523d6000602084013e610f8a565b606091505b5050905080610fc5576040517f27b8c0b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a23334604051610ff6929190611a5e565b60405180910390a1346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461104c9190611a87565b9250508190555034600160008282546110659190611a87565b925050819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600382815481106110e8576110e76118dc565b5b906000526020600020906008020160070160009054906101000a900460ff1660028111156111195761111861190b565b5b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600480549050905090565b60008160070160009054906101000a900460ff169050919050565b600081600201549050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b80600160006111cc8361150d565b9050811561121457600081111561120f576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61124f565b6000810361124e576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b8360060154846005015411156112915760018460070160006101000a81548160ff021916908360028111156112875761128661190b565b5b02179055506112bf565b60028460070160006101000a81548160ff021916908360028111156112b9576112b861190b565b5b02179055505b50505050565b60008183856112d49190611abb565b101561130c576040517f31869caf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8183856113199190611abb565b6113239190611b2c565b90509392505050565b836000806113398361150d565b9050811561138157600081111561137c576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113bc565b600081036113bb576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b8660000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611442576040517fd2383bdc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600060018111156114b0576114af61190b565b5b8660018111156114c3576114c261190b565b5b036114e857838760050160008282546114dc9190611a87565b92505081905550611504565b838760060160008282546114fc9190611a87565b925050819055505b50505050505050565b600080826001015483600301546115249190611a87565b9050804210611537576000915050611547565b42816115439190611a2a565b9150505b919050565b6000819050919050565b61155f8161154c565b82525050565b600060208201905061157a6000830184611556565b92915050565b600080fd5b61158e8161154c565b811461159957600080fd5b50565b6000813590506115ab81611585565b92915050565b6000602082840312156115c7576115c6611580565b5b60006115d58482850161159c565b91505092915050565b600063ffffffff82169050919050565b6115f7816115de565b82525050565b60008115159050919050565b611612816115fd565b82525050565b600060e08201905061162d600083018a611556565b61163a6020830189611556565b6116476040830188611556565b61165460608301876115ee565b6116616080830186611556565b61166e60a0830185611556565b61167b60c0830184611609565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116b282611687565b9050919050565b6116c2816116a7565b82525050565b60006020820190506116dd60008301846116b9565b92915050565b6116ec816116a7565b81146116f757600080fd5b50565b600081359050611709816116e3565b92915050565b60006020828403121561172557611724611580565b5b6000611733848285016116fa565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611771816116a7565b82525050565b60006117838383611768565b60208301905092915050565b6000602082019050919050565b60006117a78261173c565b6117b18185611747565b93506117bc83611758565b8060005b838110156117ed5781516117d48882611777565b97506117df8361178f565b9250506001810190506117c0565b5085935050505092915050565b60006020820190508181036000830152611814818461179c565b905092915050565b6000806040838503121561183357611832611580565b5b60006118418582860161159c565b92505060206118528582860161159c565b9150509250929050565b6002811061186957600080fd5b50565b60008135905061187b8161185c565b92915050565b6000806040838503121561189857611897611580565b5b60006118a68582860161159c565b92505060206118b78582860161186c565b9150509250929050565b60006020820190506118d660008301846115ee565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060408201905061194f60008301856116b9565b61195c60208301846116b9565b9392505050565b60006040820190506119786000830185611556565b6119856020830184611556565b9392505050565b600081905092915050565b50565b60006119a760008361198c565b91506119b282611997565b600082019050919050565b60006119c88261199a565b9150819050919050565b60006040820190506119e76000830185611556565b6119f46020830184611609565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a358261154c565b9150611a408361154c565b9250828203905081811115611a5857611a576119fb565b5b92915050565b6000604082019050611a7360008301856116b9565b611a806020830184611556565b9392505050565b6000611a928261154c565b9150611a9d8361154c565b9250828201905080821115611ab557611ab46119fb565b5b92915050565b6000611ac68261154c565b9150611ad18361154c565b9250828202611adf8161154c565b91508282048414831517611af657611af56119fb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b378261154c565b9150611b428361154c565b925082611b5257611b51611afd565b5b82820490509291505056fea26469706673582212201e232ae61795316a4d716593eb1877279ad40d2f11ec19ae6840a8a18e3997d764736f6c63430008110033a26469706673582212205745b0435b36361857d5fc914ff5c833937bfeceb0fc1ee81463df5ddc62609c64736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 652,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaigns",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_contract(Campaign)633)dyn_storage)"
      },
      {
        "astId": 655,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaignCreaters",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 657,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_totalCampaign",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(Campaign)633)dyn_storage": {
        "base": "t_contract(Campaign)633",
        "encoding": "dynamic_array",
        "label": "contract Campaign[]",
        "numberOfBytes": "32"
      },
      "t_contract(Campaign)633": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(Campaign)633)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(Campaign)633)dyn_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}