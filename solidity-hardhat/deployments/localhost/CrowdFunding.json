{
  "address": "0x8464135c8F25Da09e49BC8782676a84730C318bC",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "campaginId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        }
      ],
      "name": "createCampaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAllCampaignOfOwner",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalCampaign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc5fb6caf9e05b1298c5529cfa534984e66627a998fd494a9426c20242f37402c",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x8464135c8F25Da09e49BC8782676a84730C318bC",
    "transactionIndex": 0,
    "gasUsed": "2171604",
    "logsBloom": "0x
    "blockHash": "0xf17ccde3c73324a2c874cad9a7e06894f73d1db580da380205d7be854b9e8bef",
    "transactionHash": "0xc5fb6caf9e05b1298c5529cfa534984e66627a998fd494a9426c20242f37402c",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2171604",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "28fd2c90014007f15095e3ec2c8b5d19",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaginId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAllCampaignOfOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCampaign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunding.sol\":\"CrowdFunding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Campaign.sol\":{\"content\":\"// // SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./Stake.sol\\\";\\r\\n\\r\\nerror Campaign__SendMinFund(uint256 value, uint256 minContribution);\\r\\nerror Campaign__NotOwner(address sender, address owner);\\r\\nerror Campaign__NotEnoughToWithdraw(\\r\\n    uint256 amountNeedToWithdraw,\\r\\n    uint256 contractBalance\\r\\n);\\r\\nerror Campaign__RequestIsUnderProcess();\\r\\nerror Campaign__RequestRejected();\\r\\nerror Campaign__ContributionTransactionFailed();\\r\\nerror Campaign__WithdrawTransactionFailed();\\r\\nerror Campaign__NoEnoughAmount();\\r\\nerror Campaign__NotAContributer();\\r\\n\\r\\ncontract Campaign is Stake {\\r\\n    mapping(address => uint256) public s_contributerFund;\\r\\n    uint256 private immutable i_campaignGoal;\\r\\n    uint256 private immutable i_minContribution;\\r\\n    uint256 private s_TotalFunded;\\r\\n    address private s_owner;\\r\\n    Request[] private s_requests;\\r\\n    address[] private s_contributers;\\r\\n\\r\\n    event FundWithdrawed(uint256 amountWithdrawed);\\r\\n    event OwnershipTransfered(address from, address to);\\r\\n    event FundTransfered(address from, uint256 fundedAmount);\\r\\n    event RequestApplied(uint256 requestIndex);\\r\\n    event RequestResult(uint256 requestIndex, bool approved);\\r\\n\\r\\n    constructor(uint256 campaignGoal, uint256 minContribution) {\\r\\n        i_campaignGoal = campaignGoal;\\r\\n        i_minContribution = minContribution;\\r\\n        s_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != s_owner) {\\r\\n            revert Campaign__NotOwner(msg.sender, s_owner);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyContributers() {\\r\\n        if (s_contributerFund[msg.sender] == 0) {\\r\\n            revert Campaign__NotAContributer();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier permissionIssued(uint256 requestIndex) {\\r\\n        executeResult(requestIndex);\\r\\n        if (\\r\\n            getPermissionStatus(s_requests[requestIndex]) ==\\r\\n            CampaignLib.permission.PROCESSING\\r\\n        ) {\\r\\n            revert Campaign__RequestIsUnderProcess();\\r\\n        }\\r\\n        if (\\r\\n            getPermissionStatus(s_requests[requestIndex]) ==\\r\\n            CampaignLib.permission.REJECTED\\r\\n        ) {\\r\\n            revert Campaign__RequestRejected();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier checkMinContribute() {\\r\\n        require(\\r\\n            msg.value >= i_minContribution,\\r\\n            \\\"Increase the contribution amount\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    receive() external payable checkMinContribute {\\r\\n        emit FundTransfered(msg.sender, msg.value);\\r\\n\\r\\n        s_contributerFund[msg.sender] += msg.value;\\r\\n        s_TotalFunded += msg.value;\\r\\n        s_contributers.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw(\\r\\n        uint256 requestIndex\\r\\n    ) public payable onlyOwner permissionIssued(requestIndex) {\\r\\n        uint256 amount = getRequestedAmount(s_requests[requestIndex]);\\r\\n        if (address(this).balance < amount) {\\r\\n            revert Campaign__NotEnoughToWithdraw(amount, address(this).balance);\\r\\n        }\\r\\n        (bool sent, ) = s_owner.call{value: amount}(\\\"\\\");\\r\\n\\r\\n        if (!sent) {\\r\\n            revert Campaign__WithdrawTransactionFailed();\\r\\n        }\\r\\n\\r\\n        setRecieved(s_requests[requestIndex]);\\r\\n        emit FundWithdrawed(amount);\\r\\n    }\\r\\n\\r\\n    function makeRequest(\\r\\n        uint256 _durationOfRequest,\\r\\n        uint256 _withdrawAmount\\r\\n    ) public onlyOwner returns (uint256) {\\r\\n        // Stake happens here\\r\\n\\r\\n        Request storage request = s_requests.push();\\r\\n        request.durationOfRequest = _durationOfRequest;\\r\\n        request.requestedAmount = _withdrawAmount;\\r\\n        request.requestedTime = block.timestamp;\\r\\n        request.totalAcceptVote = 0;\\r\\n        request.totalRejectVote = 0;\\r\\n        request.amountRecieved = false;\\r\\n        request.campaignAddress = address(this);\\r\\n        request.currentStatus = CampaignLib.permission.PROCESSING;\\r\\n        emit RequestApplied(s_requests.length - 1);\\r\\n\\r\\n        return (s_requests.length - 1);\\r\\n    }\\r\\n\\r\\n    function stakeInRequest(uint256 requestId, bool myVote) public {\\r\\n        uint256 weightage = calcualtePercent(\\r\\n            s_contributerFund[msg.sender],\\r\\n            10000,\\r\\n            s_TotalFunded\\r\\n        );\\r\\n        stake(s_requests[requestId], myVote, msg.sender, weightage);\\r\\n    }\\r\\n\\r\\n    function executeResult(uint256 requestIndex) public {\\r\\n        result(s_requests[requestIndex]);\\r\\n\\r\\n        emit RequestResult(\\r\\n            requestIndex,\\r\\n            getPermissionStatus(s_requests[requestIndex]) ==\\r\\n                CampaignLib.permission.ACCEPTED\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // Getter and setter functions\\r\\n\\r\\n    function getContributors() public view returns (address[] memory) {\\r\\n        return s_contributers;\\r\\n    }\\r\\n\\r\\n    function getTotalFund() public view returns (uint256) {\\r\\n        return s_TotalFunded;\\r\\n    }\\r\\n\\r\\n    function getFundByAddress(\\r\\n        address contributer\\r\\n    ) public view returns (uint256) {\\r\\n        return s_contributerFund[contributer];\\r\\n    }\\r\\n\\r\\n    function getOwnerAddress() public view returns (address) {\\r\\n        return s_owner;\\r\\n    }\\r\\n\\r\\n    function transferOwnerShip(address to) public onlyOwner {\\r\\n        s_owner = to;\\r\\n        emit OwnershipTransfered(msg.sender, to);\\r\\n    }\\r\\n\\r\\n    function getCurrentFundInContract() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getContributorsFundAmount(\\r\\n        address contributerAddress\\r\\n    ) public view returns (uint256) {\\r\\n        return s_contributerFund[contributerAddress];\\r\\n    }\\r\\n\\r\\n    function getCampaignGoal() public view returns (uint256) {\\r\\n        return i_campaignGoal;\\r\\n    }\\r\\n\\r\\n    function getTotalContributers() public view returns (uint256) {\\r\\n        return s_contributers.length;\\r\\n    }\\r\\n\\r\\n    function calcualtePercent(\\r\\n        uint256 amount,\\r\\n        uint256 bps,\\r\\n        uint256 totalAmount\\r\\n    ) internal pure returns (uint256) {\\r\\n        if (amount * bps < totalAmount) {\\r\\n            revert Campaign__NoEnoughAmount();\\r\\n        }\\r\\n        return (amount * bps) / totalAmount;\\r\\n    }\\r\\n\\r\\n    function getRequestStatus(uint256 requestId) public view returns (uint32) {\\r\\n        return uint32(s_requests[requestId].currentStatus);\\r\\n    }\\r\\n\\r\\n    bool amountRecieved;\\r\\n\\r\\n    function getRequestInfo(\\r\\n        uint256 requestId\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        returns (uint256, uint256, uint256, uint32, uint256, uint256, bool)\\r\\n    {\\r\\n        return (\\r\\n            s_requests[requestId].requestedAmount,\\r\\n            s_requests[requestId].requestedTime,\\r\\n            s_requests[requestId].durationOfRequest,\\r\\n            uint32(s_requests[requestId].currentStatus),\\r\\n            s_requests[requestId].totalAcceptVote,\\r\\n            s_requests[requestId].totalRejectVote,\\r\\n            s_requests[requestId].amountRecieved\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getMinContributionLimit() public view returns (uint256) {\\r\\n        return i_minContribution;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcb3fb9eb4e44b50094521ec6cb79d561b09f664a7049a81a53ca1084fda6ee84\",\"license\":\"MIT\"},\"contracts/CampaignLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nlibrary CampaignLib {\\r\\n    enum permission {\\r\\n        PROCESSING,\\r\\n        ACCEPTED,\\r\\n        REJECTED\\r\\n    }\\r\\n\\r\\n    enum vote {\\r\\n        ACCEPT,\\r\\n        REJECT\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x63fd4e3243295646d1ae97f617eb1c0000ba63f7c0792e8416f0ac4b23b10292\",\"license\":\"MIT\"},\"contracts/CrowdFunding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\ncontract CrowdFunding {\\r\\n    mapping(address => Campaign[]) private s_campaigns;\\r\\n    address[] private s_campaignCreaters;\\r\\n    uint256 private s_totalCampaign;\\r\\n\\r\\n    event CampaignCreated(\\r\\n        address campaignCreator,\\r\\n        uint256 campaginId,\\r\\n        address campaignAddress\\r\\n    );\\r\\n\\r\\n    function createCampaign(\\r\\n        uint256 _campaignGoal,\\r\\n        uint256 _minContribution\\r\\n    ) public returns (address) {\\r\\n        Campaign campaign = new Campaign(_campaignGoal, _minContribution);\\r\\n        campaign.transferOwnerShip(msg.sender);\\r\\n\\r\\n        s_campaigns[msg.sender].push(campaign);\\r\\n        s_campaignCreaters.push(msg.sender);\\r\\n\\r\\n        s_totalCampaign += 1;\\r\\n\\r\\n        emit CampaignCreated(\\r\\n            msg.sender,\\r\\n            s_campaigns[msg.sender].length - 1,\\r\\n            address(campaign)\\r\\n        );\\r\\n        return address(campaign);\\r\\n    }\\r\\n\\r\\n    function getCampaign(\\r\\n        address owner,\\r\\n        uint256 campaignId\\r\\n    ) public view returns (address) {\\r\\n        return address(s_campaigns[owner][campaignId]);\\r\\n    }\\r\\n\\r\\n    function getAllCampaignOfOwner(\\r\\n        address owner\\r\\n    ) public view returns (address[] memory) {\\r\\n        uint256 totalCampaign = s_campaigns[owner].length;\\r\\n        address[] memory campaigns = new address[](totalCampaign);\\r\\n        for (uint i = 0; i < totalCampaign; i++) {\\r\\n            campaigns[i] = address(s_campaigns[owner][i]);\\r\\n        }\\r\\n        return campaigns;\\r\\n    }\\r\\n\\r\\n    function getTotalCampaign() public view returns (uint256) {\\r\\n        return s_totalCampaign;\\r\\n    }\\r\\n\\r\\n    // Implement a function to get s_campagins\\r\\n    // function getAllCampaign() public view returns () {\\r\\n\\r\\n    // }\\r\\n}\\r\\n\",\"keccak256\":\"0x65ce3a765a6f02ccb4963ef89e26b080906de8f5df547fb52fcd98682a6e2a66\",\"license\":\"MIT\"},\"contracts/Stake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./CampaignLib.sol\\\";\\r\\n\\r\\n// TO DO\\r\\n//\\r\\n// Start the stake event\\r\\n// contributers can vote\\r\\n// End the event\\r\\n// Send the result and withdraw if needed\\r\\n//\\r\\n\\r\\nerror Stake__DeadlineNotReached();\\r\\nerror Stake__DeadLineReached();\\r\\nerror Stake__ContributerAlreadyVoted();\\r\\n\\r\\ncontract Stake {\\r\\n    struct Request {\\r\\n        mapping(address => bool) contributersVoted;\\r\\n        uint256 durationOfRequest;\\r\\n        uint256 requestedAmount;\\r\\n        uint256 requestedTime;\\r\\n        address campaignAddress;\\r\\n        // Voting variables\\r\\n        uint256 totalAcceptVote;\\r\\n        uint256 totalRejectVote;\\r\\n        // status\\r\\n        CampaignLib.permission currentStatus;\\r\\n        bool amountRecieved;\\r\\n    }\\r\\n\\r\\n    modifier deadlineReached(Request storage request, bool requireReached) {\\r\\n        uint256 timeRemaining = timeLeft(request);\\r\\n        if (requireReached) {\\r\\n            if (timeRemaining > 0) {\\r\\n                revert Stake__DeadlineNotReached();\\r\\n            }\\r\\n            // require(timeRemaining == 0, \\\"Deadline has not reached\\\");\\r\\n        } else {\\r\\n            if (timeRemaining == 0) {\\r\\n                revert Stake__DeadLineReached();\\r\\n            }\\r\\n            // require(timeRemaining > 0, \\\"Deadline is already reached\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Add a modifier if all the contributers voted\\r\\n\\r\\n    function stake(\\r\\n        Request storage request,\\r\\n        bool myVote,\\r\\n        address contributer,\\r\\n        uint256 weightage\\r\\n    ) internal deadlineReached(request, false) {\\r\\n        if (request.contributersVoted[contributer]) {\\r\\n            revert Stake__ContributerAlreadyVoted();\\r\\n        }\\r\\n        request.contributersVoted[contributer] = true;\\r\\n        if (myVote) {\\r\\n            request.totalAcceptVote += weightage;\\r\\n        } else {\\r\\n            request.totalRejectVote += weightage;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Make a function that gets call for chainlink\\r\\n\\r\\n    function result(\\r\\n        Request storage request\\r\\n    ) internal deadlineReached(request, true) {\\r\\n        if (request.totalAcceptVote > request.totalRejectVote) {\\r\\n            request.currentStatus = CampaignLib.permission.ACCEPTED;\\r\\n        } else {\\r\\n            request.currentStatus = CampaignLib.permission.REJECTED;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function timeLeft(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256 timeleft) {\\r\\n        uint256 deadline = request.requestedTime + request.durationOfRequest;\\r\\n        if (block.timestamp >= deadline) {\\r\\n            return 0;\\r\\n        } else {\\r\\n            return deadline - block.timestamp;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCurrentStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n\\r\\n    function getRequestedAmount(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256) {\\r\\n        return request.requestedAmount;\\r\\n    }\\r\\n\\r\\n    function setRecieved(Request storage request) internal {\\r\\n        request.amountRecieved = true;\\r\\n    }\\r\\n\\r\\n    function getPermissionStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7cb32d062382b23cfff363a0fefd2665e2ad53c90ce768f1cae72b3a37569748\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063011048491461005157806317d2997414610081578063225022681461009f578063b08328b4146100cf575b600080fd5b61006b600480360381019061006691906105d8565b6100ff565b60405161007891906106c3565b60405180910390f35b610089610285565b60405161009691906106fe565b60405180910390f35b6100b960048036038101906100b49190610745565b61028f565b6040516100c69190610794565b60405180910390f35b6100e960048036038101906100e491906107af565b6104e3565b6040516100f69190610794565b60405180910390f35b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff811115610163576101626107ef565b5b6040519080825280602002602001820160405280156101915781602001602082028036833780820191505090505b50905060005b8281101561027a576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106101ef576101ee61081e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061022d5761022c61081e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806102729061087c565b915050610197565b508092505050919050565b6000600254905090565b60008083836040516102a090610568565b6102ab9291906108c4565b604051809103906000f0801580156102c7573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16638863dd1a336040518263ffffffff1660e01b81526004016103039190610794565b600060405180830381600087803b15801561031d57600080fd5b505af1158015610331573d6000803e3d6000fd5b505050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002600082825461044a91906108ed565b925050819055507fa01c8e2b0a81830c2e4e199b4cb98ece9d41443b7f9ef51cbb778f0fa13b019d3360016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506104c19190610921565b836040516104d193929190610955565b60405180910390a18091505092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105355761053461081e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611cbe8061098d83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a58261057a565b9050919050565b6105b58161059a565b81146105c057600080fd5b50565b6000813590506105d2816105ac565b92915050565b6000602082840312156105ee576105ed610575565b5b60006105fc848285016105c3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61063a8161059a565b82525050565b600061064c8383610631565b60208301905092915050565b6000602082019050919050565b600061067082610605565b61067a8185610610565b935061068583610621565b8060005b838110156106b657815161069d8882610640565b97506106a883610658565b925050600181019050610689565b5085935050505092915050565b600060208201905081810360008301526106dd8184610665565b905092915050565b6000819050919050565b6106f8816106e5565b82525050565b600060208201905061071360008301846106ef565b92915050565b610722816106e5565b811461072d57600080fd5b50565b60008135905061073f81610719565b92915050565b6000806040838503121561075c5761075b610575565b5b600061076a85828601610730565b925050602061077b85828601610730565b9150509250929050565b61078e8161059a565b82525050565b60006020820190506107a96000830184610785565b92915050565b600080604083850312156107c6576107c5610575565b5b60006107d4858286016105c3565b92505060206107e585828601610730565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610887826106e5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108b9576108b861084d565b5b600182019050919050565b60006040820190506108d960008301856106ef565b6108e660208301846106ef565b9392505050565b60006108f8826106e5565b9150610903836106e5565b925082820190508082111561091b5761091a61084d565b5b92915050565b600061092c826106e5565b9150610937836106e5565b925082820390508181111561094f5761094e61084d565b5b92915050565b600060608201905061096a6000830186610785565b61097760208301856106ef565b6109846040830184610785565b94935050505056fe60c06040523480156200001157600080fd5b5060405162001cbe38038062001cbe8339818101604052810190620000379190620000d0565b81608081815250508060a0818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000117565b600080fd5b6000819050919050565b620000aa8162000095565b8114620000b657600080fd5b50565b600081519050620000ca816200009f565b92915050565b60008060408385031215620000ea57620000e962000090565b5b6000620000fa85828601620000b9565b92505060206200010d85828601620000b9565b9150509250929050565b60805160a051611b7a6200014460003960008181610109015261074201526000610c590152611b7a6000f3fe6080604052600436106101025760003560e01c806372b47b8411610095578063b93863df11610064578063b93863df14610493578063c7abca47146104d0578063d8a4676f1461050d578063e4d89cf61461054a578063fd6bc8b81461058757610275565b806372b47b84146103e95780638863dd1a146104145780639fd813e31461043d578063af157c191461046857610275565b80632e1a7d4d116100d15780632e1a7d4d1461033e5780634b73212b1461035a578063696a7319146103975780637018a7af146103c057610275565b806309d387da1461027a5780630b816045146102a55780630c4f65bd146102e85780631972f7fa1461031357610275565b36610275577f000000000000000000000000000000000000000000000000000000000000000034101561016a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101619061150c565b60405180910390fd5b7f4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a2333460405161019b929190611586565b60405180910390a1346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f191906115de565b92505081905550346001600082825461020a91906115de565b925050819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055005b600080fd5b34801561028657600080fd5b5061028f6105b2565b60405161029c9190611612565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c7919061165e565b6105ba565b6040516102df97969594939291906116c5565b60405180910390f35b3480156102f457600080fd5b506102fd610714565b60405161030a9190611734565b60405180910390f35b34801561031f57600080fd5b5061032861073e565b6040516103359190611612565b60405180910390f35b6103586004803603810190610353919061165e565b610766565b005b34801561036657600080fd5b50610381600480360381019061037c919061177b565b610ad4565b60405161038e9190611612565b60405180910390f35b3480156103a357600080fd5b506103be60048036038101906103b991906117d4565b610b1c565b005b3480156103cc57600080fd5b506103e760048036038101906103e2919061165e565b610b9f565b005b3480156103f557600080fd5b506103fe610c55565b60405161040b9190611612565b60405180910390f35b34801561042057600080fd5b5061043b6004803603810190610436919061177b565b610c7d565b005b34801561044957600080fd5b50610452610db0565b60405161045f9190611612565b60405180910390f35b34801561047457600080fd5b5061047d610dba565b60405161048a91906118d2565b60405180910390f35b34801561049f57600080fd5b506104ba60048036038101906104b591906118f4565b610e48565b6040516104c79190611612565b60405180910390f35b3480156104dc57600080fd5b506104f760048036038101906104f2919061177b565b611043565b6040516105049190611612565b60405180910390f35b34801561051957600080fd5b50610534600480360381019061052f919061165e565b61105b565b6040516105419190611934565b60405180910390f35b34801561055657600080fd5b50610571600480360381019061056c919061177b565b6110a9565b60405161057e9190611612565b60405180910390f35b34801561059357600080fd5b5061059c6110f1565b6040516105a99190611612565b60405180910390f35b600047905090565b6000806000806000806000600388815481106105d9576105d861194f565b5b906000526020600020906008020160020154600389815481106105ff576105fe61194f565b5b90600052602060002090600802016003015460038a815481106106255761062461194f565b5b90600052602060002090600802016001015460038b8154811061064b5761064a61194f565b5b906000526020600020906008020160070160009054906101000a900460ff16600281111561067c5761067b61197e565b5b60038c815481106106905761068f61194f565b5b90600052602060002090600802016005015460038d815481106106b6576106b561194f565b5b90600052602060002090600802016006015460038e815481106106dc576106db61194f565b5b906000526020600020906008020160070160019054906101000a900460ff169650965096509650965096509650919395979092949650565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461081c5733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fffa2d83c0000000000000000000000000000000000000000000000000000000081526004016108139291906119ad565b60405180910390fd5b8061082681610b9f565b6000600281111561083a5761083961197e565b5b610864600383815481106108515761085061194f565b5b90600052602060002090600802016110fe565b60028111156108765761087561197e565b5b036108ad576040517fbae63cc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002808111156108c0576108bf61197e565b5b6108ea600383815481106108d7576108d661194f565b5b90600052602060002090600802016110fe565b60028111156108fc576108fb61197e565b5b03610933576040517f3db289e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061095f6003848154811061094c5761094b61194f565b5b9060005260206000209060080201611119565b9050804710156109a85780476040517fae7a822f00000000000000000000000000000000000000000000000000000000815260040161099f9291906119d6565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516109f090611a30565b60006040518083038185875af1925050503d8060008114610a2d576040519150601f19603f3d011682016040523d82523d6000602084013e610a32565b606091505b5050905080610a6d576040517f4c3ac88a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a9760038581548110610a8457610a8361194f565b5b9060005260206000209060080201611127565b7f78607c3338a50a97f0960b9ebb80a74d63115b7f462a4ea45c55abb0e5a3656382604051610ac69190611612565b60405180910390a150505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610b6b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612710600154611147565b9050610b9a60038481548110610b8457610b8361194f565b5b90600052602060002090600802018333846111ae565b505050565b610bc960038281548110610bb657610bb561194f565b5b9060005260206000209060080201611369565b7f53d354f890b3877b85a588db153bbbce1a4b7c3fd4008a48294f78f13a13524a8160016002811115610bff57610bfe61197e565b5b610c2960038581548110610c1657610c1561194f565b5b90600052602060002090600802016110fe565b6002811115610c3b57610c3a61197e565b5b14604051610c4a929190611a45565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d335733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fffa2d83c000000000000000000000000000000000000000000000000000000008152600401610d2a9291906119ad565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee673382604051610da59291906119ad565b60405180910390a150565b6000600154905090565b60606004805480602002602001604051908101604052809291908181526020018280548015610e3e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610df4575b5050505050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f005733600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fffa2d83c000000000000000000000000000000000000000000000000000000008152600401610ef79291906119ad565b60405180910390fd5b600060036001816001815401808255809150500390600052602060002090600802019050838160010181905550828160020181905550428160030181905550600081600501819055506000816006018190555060008160070160016101000a81548160ff021916908315150217905550308160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548160ff02191690836002811115610fdb57610fda61197e565b5b02179055507fa5f7f4c8f7ba98ee825a5d8b155830a9dd4e7d29fcc431c6c3bcce27776c278460016003805490506110139190611a6e565b6040516110209190611612565b60405180910390a1600160038054905061103a9190611a6e565b91505092915050565b60006020528060005260406000206000915090505481565b6000600382815481106110715761107061194f565b5b906000526020600020906008020160070160009054906101000a900460ff1660028111156110a2576110a161197e565b5b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600480549050905090565b60008160070160009054906101000a900460ff169050919050565b600081600201549050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b60008183856111569190611aa2565b101561118e576040517f31869caf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81838561119b9190611aa2565b6111a59190611b13565b90509392505050565b836000806111bb83611470565b905081156112035760008111156111fe576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61123e565b6000810361123d576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b8660000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156112c4576040517fd2383bdc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508515611344578387600501600082825461133891906115de565b92505081905550611360565b8387600601600082825461135891906115de565b925050819055505b50505050505050565b806001600061137783611470565b905081156113bf5760008111156113ba576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113fa565b600081036113f9576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b83600601548460050154111561143c5760018460070160006101000a81548160ff021916908360028111156114325761143161197e565b5b021790555061146a565b60028460070160006101000a81548160ff021916908360028111156114645761146361197e565b5b02179055505b50505050565b6000808260010154836003015461148791906115de565b905080421061149a5760009150506114aa565b42816114a69190611a6e565b9150505b919050565b600082825260208201905092915050565b7f496e6372656173652074686520636f6e747269627574696f6e20616d6f756e74600082015250565b60006114f66020836114af565b9150611501826114c0565b602082019050919050565b60006020820190508181036000830152611525816114e9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115578261152c565b9050919050565b6115678161154c565b82525050565b6000819050919050565b6115808161156d565b82525050565b600060408201905061159b600083018561155e565b6115a86020830184611577565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115e98261156d565b91506115f48361156d565b925082820190508082111561160c5761160b6115af565b5b92915050565b60006020820190506116276000830184611577565b92915050565b600080fd5b61163b8161156d565b811461164657600080fd5b50565b60008135905061165881611632565b92915050565b6000602082840312156116745761167361162d565b5b600061168284828501611649565b91505092915050565b600063ffffffff82169050919050565b6116a48161168b565b82525050565b60008115159050919050565b6116bf816116aa565b82525050565b600060e0820190506116da600083018a611577565b6116e76020830189611577565b6116f46040830188611577565b611701606083018761169b565b61170e6080830186611577565b61171b60a0830185611577565b61172860c08301846116b6565b98975050505050505050565b6000602082019050611749600083018461155e565b92915050565b6117588161154c565b811461176357600080fd5b50565b6000813590506117758161174f565b92915050565b6000602082840312156117915761179061162d565b5b600061179f84828501611766565b91505092915050565b6117b1816116aa565b81146117bc57600080fd5b50565b6000813590506117ce816117a8565b92915050565b600080604083850312156117eb576117ea61162d565b5b60006117f985828601611649565b925050602061180a858286016117bf565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118498161154c565b82525050565b600061185b8383611840565b60208301905092915050565b6000602082019050919050565b600061187f82611814565b611889818561181f565b935061189483611830565b8060005b838110156118c55781516118ac888261184f565b97506118b783611867565b925050600181019050611898565b5085935050505092915050565b600060208201905081810360008301526118ec8184611874565b905092915050565b6000806040838503121561190b5761190a61162d565b5b600061191985828601611649565b925050602061192a85828601611649565b9150509250929050565b6000602082019050611949600083018461169b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006040820190506119c2600083018561155e565b6119cf602083018461155e565b9392505050565b60006040820190506119eb6000830185611577565b6119f86020830184611577565b9392505050565b600081905092915050565b50565b6000611a1a6000836119ff565b9150611a2582611a0a565b600082019050919050565b6000611a3b82611a0d565b9150819050919050565b6000604082019050611a5a6000830185611577565b611a6760208301846116b6565b9392505050565b6000611a798261156d565b9150611a848361156d565b9250828203905081811115611a9c57611a9b6115af565b5b92915050565b6000611aad8261156d565b9150611ab88361156d565b9250828202611ac68161156d565b91508282048414831517611add57611adc6115af565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b1e8261156d565b9150611b298361156d565b925082611b3957611b38611ae4565b5b82820490509291505056fea26469706673582212205b5c5985116ac22a1808dbc2a7180891203c412784bfb19667241b4d67438e5464736f6c63430008110033a2646970667358221220f94c836d21ae6a5a1389e8a006ff45599a1e268abba156943960ab2fe94d0ed664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 641,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaigns",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_contract(Campaign)622)dyn_storage)"
      },
      {
        "astId": 644,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaignCreaters",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 646,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_totalCampaign",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(Campaign)622)dyn_storage": {
        "base": "t_contract(Campaign)622",
        "encoding": "dynamic_array",
        "label": "contract Campaign[]",
        "numberOfBytes": "32"
      },
      "t_contract(Campaign)622": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(Campaign)622)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(Campaign)622)dyn_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}