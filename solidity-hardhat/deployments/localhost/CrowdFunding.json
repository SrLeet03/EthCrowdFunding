{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "campaginId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "campaignAddress",
          "type": "address"
        }
      ],
      "name": "CampaignCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignGoal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAllCampaignOfOwner",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xfc474f945cca6f9d7f2f5f1a09699ce1aef89e670b2ea992a1c0975ae090cf57",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1900834",
    "logsBloom": "0x
    "blockHash": "0x954e808df7e547402aa807cafdf7c8463b43c5007a4805678fb4b7e487bd4774",
    "transactionHash": "0xfc474f945cca6f9d7f2f5f1a09699ce1aef89e670b2ea992a1c0975ae090cf57",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1900834",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0b9fd95ce51a09c9645672116a6ea378",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaginId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaignAddress\",\"type\":\"address\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAllCampaignOfOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFunding.sol\":\"CrowdFunding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Campaign.sol\":{\"content\":\"// // SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./Stake.sol\\\";\\n\\nerror Campaign__SendMinFund();\\nerror Campaign__NotOwner();\\nerror Campaign__NotEnoughToWithdraw();\\nerror Campaign__RequestIsUnderProcess();\\nerror Campaign__RequestRejected();\\nerror Campaign__NotAnEligiableContributer();\\nerror Campaign__ContributionTransactionFailed();\\nerror Campaign__WithdrawTransactionFailed();\\nerror CampaignLib__NoEnoughAmount();\\n\\ncontract Campaign is Stake {\\n    mapping(address => uint256) public s_contributerFund;\\n    uint256 private immutable i_campaignGoal;\\n    uint256 private immutable i_minContribution;\\n    uint256 private s_TotalFunded;\\n    address private s_owner;\\n    Request[] private s_requests;\\n    address[] private s_contributers;\\n\\n    event FundWithdrawed(uint256 amountWithdrawed);\\n    event OwnershipTransfered(address from, address to);\\n    event FundTransfered(address from, uint256 fundedAmount);\\n    event RequestApplied(uint256 requestIndex);\\n    event RequestResult(uint256 requestIndex, bool approved);\\n\\n    constructor(uint256 campaignGoal, uint256 minContribution) {\\n        i_campaignGoal = campaignGoal;\\n        i_minContribution = minContribution;\\n        s_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != s_owner) {\\n            revert Campaign__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    modifier permissionIssued(uint256 requestIndex) {\\n        executeResult(requestIndex);\\n        if (\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n            CampaignLib.permission.PROCESSING\\n        ) {\\n            revert Campaign__RequestIsUnderProcess();\\n        }\\n        if (\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n            CampaignLib.permission.REJECTED\\n        ) {\\n            revert Campaign__RequestRejected();\\n        }\\n        _;\\n    }\\n\\n    function contribute() public payable {\\n        if (msg.value < i_minContribution) {\\n            revert Campaign__SendMinFund();\\n        }\\n        (bool sent, ) = address(this).call{value: msg.value}(\\\"\\\");\\n\\n        if (!sent) {\\n            revert Campaign__ContributionTransactionFailed();\\n        }\\n\\n        emit FundTransfered(msg.sender, msg.value);\\n\\n        s_contributerFund[msg.sender] += msg.value;\\n        s_TotalFunded += msg.value;\\n        s_contributers.push(msg.sender);\\n    }\\n\\n    function withdraw(\\n        uint256 requestIndex\\n    ) public payable onlyOwner permissionIssued(requestIndex) {\\n        uint256 amount = getRequestedAmount(s_requests[requestIndex]);\\n        if (address(this).balance < amount) {\\n            revert Campaign__NotEnoughToWithdraw();\\n        }\\n        (bool sent, ) = s_owner.call{value: amount}(\\\"\\\");\\n\\n        if (!sent) {\\n            revert Campaign__WithdrawTransactionFailed();\\n        }\\n\\n        setRecieved(s_requests[requestIndex]);\\n        emit FundWithdrawed(amount);\\n    }\\n\\n    function makeRequest(\\n        uint256 _durationOfRequest,\\n        uint256 _withdrawAmount\\n    ) public onlyOwner {\\n        // Stake happens here\\n\\n        Request storage request = s_requests.push();\\n        request.durationOfRequest = _durationOfRequest;\\n        request.requestedAmount = _withdrawAmount;\\n        request.requestedTime = block.timestamp;\\n        request.totalAcceptVote = 0;\\n        request.totalRejectVote = 0;\\n        request.amountRecieved = false;\\n        request.campaignAddress = address(this);\\n        request.currentStatus = CampaignLib.permission.PROCESSING;\\n        emit RequestApplied(s_requests.length - 1);\\n    }\\n\\n    function stakeInRequest(uint256 requestId, CampaignLib.vote myVote) public {\\n        uint256 weightage = calcualtePercent(\\n            s_contributerFund[msg.sender],\\n            10000,\\n            s_TotalFunded\\n        );\\n        stake(s_requests[requestId], myVote, msg.sender, weightage);\\n    }\\n\\n    function executeResult(uint256 requestIndex) public {\\n        result(s_requests[requestIndex]);\\n\\n        emit RequestResult(\\n            requestIndex,\\n            getPermissionStatus(s_requests[requestIndex]) ==\\n                CampaignLib.permission.ACCEPTED\\n        );\\n    }\\n\\n    // Getter and setter functions\\n\\n    function getContributors() public view returns (address[] memory) {\\n        return s_contributers;\\n    }\\n\\n    function getTotalFund() public view returns (uint256) {\\n        return s_TotalFunded;\\n    }\\n\\n    function getFundByAddress(\\n        address contributer\\n    ) public view returns (uint256) {\\n        return s_contributerFund[contributer];\\n    }\\n\\n    function getOwnerAddress() public view returns (address) {\\n        return s_owner;\\n    }\\n\\n    function transferOwnerShip(address to) public onlyOwner {\\n        s_owner = to;\\n        emit OwnershipTransfered(msg.sender, to);\\n    }\\n\\n    function getCurrentFundInContract() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getContributorsFundAmount(\\n        address contributerAddress\\n    ) public view returns (uint256) {\\n        return s_contributerFund[contributerAddress];\\n    }\\n\\n    function getCampaignGoal() public view returns (uint256) {\\n        return i_campaignGoal;\\n    }\\n\\n    function getTotalContributers() public view returns (uint256) {\\n        return s_contributers.length;\\n    }\\n\\n    function calcualtePercent(\\n        uint256 amount,\\n        uint256 bps,\\n        uint256 totalAmount\\n    ) internal pure returns (uint256) {\\n        if (amount * bps < totalAmount) {\\n            revert CampaignLib__NoEnoughAmount();\\n        }\\n        return (amount * bps) / totalAmount;\\n    }\\n}\\n\",\"keccak256\":\"0xc0bc1c5a7791918bb868dd92f0781522ecf0ae7018bcb8aa6c750bc58f89c762\",\"license\":\"MIT\"},\"contracts/CampaignLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nlibrary CampaignLib {\\r\\n    enum permission {\\r\\n        PROCESSING,\\r\\n        ACCEPTED,\\r\\n        REJECTED\\r\\n    }\\r\\n\\r\\n    enum vote {\\r\\n        ACCEPT,\\r\\n        REJECT\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x63fd4e3243295646d1ae97f617eb1c0000ba63f7c0792e8416f0ac4b23b10292\",\"license\":\"MIT\"},\"contracts/CrowdFunding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./Campaign.sol\\\";\\r\\n\\r\\ncontract CrowdFunding {\\r\\n    mapping(address => Campaign[]) private s_campaigns;\\r\\n    address[] private s_campaignCreaters;\\r\\n\\r\\n    event CampaignCreated(\\r\\n        address campaignCreator,\\r\\n        uint256 campaginId,\\r\\n        address campaignAddress\\r\\n    );\\r\\n\\r\\n    function createCampaign(\\r\\n        uint256 _campaignGoal,\\r\\n        uint256 _minContribution\\r\\n    ) public {\\r\\n        Campaign campaign = new Campaign(_campaignGoal, _minContribution);\\r\\n        campaign.transferOwnerShip(msg.sender);\\r\\n\\r\\n        s_campaigns[msg.sender].push(campaign);\\r\\n        s_campaignCreaters.push(msg.sender);\\r\\n\\r\\n        emit CampaignCreated(\\r\\n            msg.sender,\\r\\n            s_campaigns[msg.sender].length,\\r\\n            address(campaign)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getCampaign(\\r\\n        address owner,\\r\\n        uint256 campaignId\\r\\n    ) public view returns (address) {\\r\\n        return address(s_campaigns[owner][campaignId]);\\r\\n    }\\r\\n\\r\\n    function getAllCampaignOfOwner(\\r\\n        address owner\\r\\n    ) public view returns (address[] memory) {\\r\\n        uint256 totalCampaign = s_campaigns[owner].length;\\r\\n        address[] memory campaigns = new address[](totalCampaign);\\r\\n        for (uint i = 0; i < totalCampaign; i++) {\\r\\n            campaigns[i] = address(s_campaigns[owner][i]);\\r\\n        }\\r\\n        return campaigns;\\r\\n    }\\r\\n\\r\\n    // Implement a function to get s_campagins\\r\\n    // function getAllCampaign() public view returns () {\\r\\n\\r\\n    // }\\r\\n}\\r\\n\",\"keccak256\":\"0xf747da475625400fda6f5e2eca2d618e5b72d062a97397f1c9e515da8eaaa135\",\"license\":\"MIT\"},\"contracts/Stake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./CampaignLib.sol\\\";\\r\\n\\r\\n// TO DO\\r\\n//\\r\\n// Start the stake event\\r\\n// contributers can vote\\r\\n// End the event\\r\\n// Send the result and withdraw if needed\\r\\n//\\r\\n\\r\\nerror Stake__DeadlineNotReached();\\r\\nerror Stake__DeadLineReached();\\r\\nerror Stake__ContributerAlreadyVoted();\\r\\n\\r\\ncontract Stake {\\r\\n    struct Request {\\r\\n        mapping(address => bool) contributersVoted;\\r\\n        uint256 durationOfRequest;\\r\\n        uint256 requestedAmount;\\r\\n        uint256 requestedTime;\\r\\n        address campaignAddress;\\r\\n        // Voting variables\\r\\n        uint256 totalAcceptVote;\\r\\n        uint256 totalRejectVote;\\r\\n        // status\\r\\n        CampaignLib.permission currentStatus;\\r\\n        bool amountRecieved;\\r\\n    }\\r\\n\\r\\n    modifier deadlineReached(Request storage request, bool requireReached) {\\r\\n        uint256 timeRemaining = timeLeft(request);\\r\\n        if (requireReached) {\\r\\n            if (timeRemaining > 0) {\\r\\n                revert Stake__DeadlineNotReached();\\r\\n            }\\r\\n            // require(timeRemaining == 0, \\\"Deadline has not reached\\\");\\r\\n        } else {\\r\\n            if (timeRemaining == 0) {\\r\\n                revert Stake__DeadLineReached();\\r\\n            }\\r\\n            // require(timeRemaining > 0, \\\"Deadline is already reached\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Add a modifier if all the contributers voted\\r\\n\\r\\n    function stake(\\r\\n        Request storage request,\\r\\n        CampaignLib.vote myVote,\\r\\n        address contributer,\\r\\n        uint256 weightage\\r\\n    ) internal deadlineReached(request, false) {\\r\\n        if (request.contributersVoted[contributer]) {\\r\\n            revert Stake__ContributerAlreadyVoted();\\r\\n        }\\r\\n        request.contributersVoted[contributer] = true;\\r\\n        if (myVote == CampaignLib.vote.ACCEPT) {\\r\\n            request.totalAcceptVote += weightage;\\r\\n        } else {\\r\\n            request.totalRejectVote += weightage;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Make a function that gets call for chainlink\\r\\n\\r\\n    function result(\\r\\n        Request storage request\\r\\n    ) internal deadlineReached(request, true) {\\r\\n        if (request.totalAcceptVote > request.totalRejectVote) {\\r\\n            request.currentStatus = CampaignLib.permission.ACCEPTED;\\r\\n        } else {\\r\\n            request.currentStatus = CampaignLib.permission.REJECTED;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function timeLeft(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256 timeleft) {\\r\\n        uint256 deadline = request.requestedTime + request.durationOfRequest;\\r\\n        if (block.timestamp >= deadline) {\\r\\n            return 0;\\r\\n        } else {\\r\\n            return deadline - block.timestamp;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCurrentStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n\\r\\n    function getRequestedAmount(\\r\\n        Request storage request\\r\\n    ) internal view returns (uint256) {\\r\\n        return request.requestedAmount;\\r\\n    }\\r\\n\\r\\n    function setRecieved(Request storage request) internal {\\r\\n        request.amountRecieved = true;\\r\\n    }\\r\\n\\r\\n    function getPermissionStatus(\\r\\n        Request storage request\\r\\n    ) internal view returns (CampaignLib.permission) {\\r\\n        return request.currentStatus;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xee2d8e33326e8097a1c2fd0e780f397f82e20c6a70c5d275a3e9fe1eb0dd5558\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612199806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301104849146100465780632250226814610076578063b08328b414610092575b600080fd5b610060600480360381019061005b9190610565565b6100c2565b60405161006d9190610650565b60405180910390f35b610090600480360381019061008b91906106a8565b610248565b005b6100ac60048036038101906100a791906106e8565b610470565b6040516100b99190610737565b60405180910390f35b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561012657610125610752565b5b6040519080825280602002602001820160405280156101545781602001602082028036833780820191505090505b50905060005b8281101561023d576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106101b2576101b1610781565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106101f0576101ef610781565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080610235906107df565b91505061015a565b508092505050919050565b60008282604051610258906104f5565b610263929190610836565b604051809103906000f08015801561027f573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16638863dd1a336040518263ffffffff1660e01b81526004016102bb9190610737565b600060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa01c8e2b0a81830c2e4e199b4cb98ece9d41443b7f9ef51cbb778f0fa13b019d336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050836040516104639392919061085f565b60405180910390a1505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106104c2576104c1610781565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6118cd8061089783390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053282610507565b9050919050565b61054281610527565b811461054d57600080fd5b50565b60008135905061055f81610539565b92915050565b60006020828403121561057b5761057a610502565b5b600061058984828501610550565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6105c781610527565b82525050565b60006105d983836105be565b60208301905092915050565b6000602082019050919050565b60006105fd82610592565b610607818561059d565b9350610612836105ae565b8060005b8381101561064357815161062a88826105cd565b9750610635836105e5565b925050600181019050610616565b5085935050505092915050565b6000602082019050818103600083015261066a81846105f2565b905092915050565b6000819050919050565b61068581610672565b811461069057600080fd5b50565b6000813590506106a28161067c565b92915050565b600080604083850312156106bf576106be610502565b5b60006106cd85828601610693565b92505060206106de85828601610693565b9150509250929050565b600080604083850312156106ff576106fe610502565b5b600061070d85828601610550565b925050602061071e85828601610693565b9150509250929050565b61073181610527565b82525050565b600060208201905061074c6000830184610728565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ea82610672565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361081c5761081b6107b0565b5b600182019050919050565b61083081610672565b82525050565b600060408201905061084b6000830185610827565b6108586020830184610827565b9392505050565b60006060820190506108746000830186610728565b6108816020830185610827565b61088e6040830184610728565b94935050505056fe60c06040523480156200001157600080fd5b50604051620018cd380380620018cd8339818101604052810190620000379190620000d0565b81608081815250508060a0818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000117565b600080fd5b6000819050919050565b620000aa8162000095565b8114620000b657600080fd5b50565b600081519050620000ca816200009f565b92915050565b60008060408385031215620000ea57620000e962000090565b5b6000620000fa85828601620000b9565b92505060206200010d85828601620000b9565b9150509250929050565b60805160a0516117906200013d6000396000610be7015260006107d601526117906000f3fe6080604052600436106100e85760003560e01c80639fd813e31161008a578063c7abca4711610059578063c7abca47146102c1578063d7bb99ba146102fe578063e4d89cf614610308578063fd6bc8b814610345576100e8565b80639fd813e314610219578063af157c1914610244578063b93863df1461026f578063ba56585914610298576100e8565b80634b73212b116100c65780634b73212b1461015f5780637018a7af1461019c57806372b47b84146101c55780638863dd1a146101f0576100e8565b806309d387da146100ed5780630c4f65bd146101185780632e1a7d4d14610143575b600080fd5b3480156100f957600080fd5b50610102610370565b60405161010f9190611234565b60405180910390f35b34801561012457600080fd5b5061012d610378565b60405161013a9190611290565b60405180910390f35b61015d600480360381019061015891906112dc565b6103a2565b005b34801561016b57600080fd5b5061018660048036038101906101819190611335565b6106d4565b6040516101939190611234565b60405180910390f35b3480156101a857600080fd5b506101c360048036038101906101be91906112dc565b61071c565b005b3480156101d157600080fd5b506101da6107d2565b6040516101e79190611234565b60405180910390f35b3480156101fc57600080fd5b5061021760048036038101906102129190611335565b6107fa565b005b34801561022557600080fd5b5061022e6108fe565b60405161023b9190611234565b60405180910390f35b34801561025057600080fd5b50610259610908565b6040516102669190611420565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190611442565b610996565b005b3480156102a457600080fd5b506102bf60048036038101906102ba91906114a7565b610b4a565b005b3480156102cd57600080fd5b506102e860048036038101906102e39190611335565b610bcd565b6040516102f59190611234565b60405180910390f35b610306610be5565b005b34801561031457600080fd5b5061032f600480360381019061032a9190611335565b610def565b60405161033c9190611234565b60405180910390f35b34801561035157600080fd5b5061035a610e37565b6040516103679190611234565b60405180910390f35b600047905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610429576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806104338161071c565b60006002811115610447576104466114e7565b5b6104716003838154811061045e5761045d611516565b5b9060005260206000209060080201610e44565b6002811115610483576104826114e7565b5b036104ba576040517fbae63cc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002808111156104cd576104cc6114e7565b5b6104f7600383815481106104e4576104e3611516565b5b9060005260206000209060080201610e44565b6002811115610509576105086114e7565b5b03610540576040517f3db289e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061056c6003848154811061055957610558611516565b5b9060005260206000209060080201610e5f565b9050804710156105a8576040517f57d5fa0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516105f090611576565b60006040518083038185875af1925050503d806000811461062d576040519150601f19603f3d011682016040523d82523d6000602084013e610632565b606091505b505090508061066d576040517f4c3ac88a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106976003858154811061068457610683611516565b5b9060005260206000209060080201610e6d565b7f78607c3338a50a97f0960b9ebb80a74d63115b7f462a4ea45c55abb0e5a36563826040516106c69190611234565b60405180910390a150505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107466003828154811061073357610732611516565b5b9060005260206000209060080201610e8d565b7f53d354f890b3877b85a588db153bbbce1a4b7c3fd4008a48294f78f13a13524a816001600281111561077c5761077b6114e7565b5b6107a66003858154811061079357610792611516565b5b9060005260206000209060080201610e44565b60028111156107b8576107b76114e7565b5b146040516107c79291906115a6565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610881576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6733826040516108f39291906115cf565b60405180910390a150565b6000600154905090565b6060600480548060200260200160405190810160405280929190818152602001828054801561098c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610942575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036001816001815401808255809150500390600052602060002090600802019050828160010181905550818160020181905550428160030181905550600081600501819055506000816006018190555060008160070160016101000a81548160ff021916908315150217905550308160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548160ff02191690836002811115610af857610af76114e7565b5b02179055507fa5f7f4c8f7ba98ee825a5d8b155830a9dd4e7d29fcc431c6c3bcce27776c27846001600380549050610b309190611627565b604051610b3d9190611234565b60405180910390a1505050565b6000610b996000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612710600154610f94565b9050610bc860038481548110610bb257610bb1611516565b5b9060005260206000209060080201833384610ffb565b505050565b60006020528060005260406000206000915090505481565b7f0000000000000000000000000000000000000000000000000000000000000000341015610c3f576040517f0cb8feec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1634604051610c6590611576565b60006040518083038185875af1925050503d8060008114610ca2576040519150601f19603f3d011682016040523d82523d6000602084013e610ca7565b606091505b5050905080610ce2576040517f27b8c0b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a23334604051610d1392919061165b565b60405180910390a1346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d699190611684565b925050819055503460016000828254610d829190611684565b925050819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600480549050905090565b60008160070160009054906101000a900460ff169050919050565b600081600201549050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b8060016000610e9b836111dc565b90508115610ee3576000811115610ede576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f1e565b60008103610f1d576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b836006015484600501541115610f605760018460070160006101000a81548160ff02191690836002811115610f5657610f556114e7565b5b0217905550610f8e565b60028460070160006101000a81548160ff02191690836002811115610f8857610f876114e7565b5b02179055505b50505050565b6000818385610fa391906116b8565b1015610fdb576040517f5bc8727400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818385610fe891906116b8565b610ff29190611729565b90509392505050565b83600080611008836111dc565b9050811561105057600081111561104b576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61108b565b6000810361108a576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b8660000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611111576040517fd2383bdc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600181111561117f5761117e6114e7565b5b866001811115611192576111916114e7565b5b036111b757838760050160008282546111ab9190611684565b925050819055506111d3565b838760060160008282546111cb9190611684565b925050819055505b50505050505050565b600080826001015483600301546111f39190611684565b9050804210611206576000915050611216565b42816112129190611627565b9150505b919050565b6000819050919050565b61122e8161121b565b82525050565b60006020820190506112496000830184611225565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127a8261124f565b9050919050565b61128a8161126f565b82525050565b60006020820190506112a56000830184611281565b92915050565b600080fd5b6112b98161121b565b81146112c457600080fd5b50565b6000813590506112d6816112b0565b92915050565b6000602082840312156112f2576112f16112ab565b5b6000611300848285016112c7565b91505092915050565b6113128161126f565b811461131d57600080fd5b50565b60008135905061132f81611309565b92915050565b60006020828403121561134b5761134a6112ab565b5b600061135984828501611320565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113978161126f565b82525050565b60006113a9838361138e565b60208301905092915050565b6000602082019050919050565b60006113cd82611362565b6113d7818561136d565b93506113e28361137e565b8060005b838110156114135781516113fa888261139d565b9750611405836113b5565b9250506001810190506113e6565b5085935050505092915050565b6000602082019050818103600083015261143a81846113c2565b905092915050565b60008060408385031215611459576114586112ab565b5b6000611467858286016112c7565b9250506020611478858286016112c7565b9150509250929050565b6002811061148f57600080fd5b50565b6000813590506114a181611482565b92915050565b600080604083850312156114be576114bd6112ab565b5b60006114cc858286016112c7565b92505060206114dd85828601611492565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b6000611560600083611545565b915061156b82611550565b600082019050919050565b600061158182611553565b9150819050919050565b60008115159050919050565b6115a08161158b565b82525050565b60006040820190506115bb6000830185611225565b6115c86020830184611597565b9392505050565b60006040820190506115e46000830185611281565b6115f16020830184611281565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116328261121b565b915061163d8361121b565b9250828203905081811115611655576116546115f8565b5b92915050565b60006040820190506116706000830185611281565b61167d6020830184611225565b9392505050565b600061168f8261121b565b915061169a8361121b565b92508282019050808211156116b2576116b16115f8565b5b92915050565b60006116c38261121b565b91506116ce8361121b565b92508282026116dc8161121b565b915082820484148315176116f3576116f26115f8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117348261121b565b915061173f8361121b565b92508261174f5761174e6116fa565b5b82820490509291505056fea2646970667358221220834c4c17a46ad4fa253034586d20668a3eaeea92a28efeef77bf76cf57b3b54c64736f6c63430008110033a2646970667358221220b6a6509b569038e1c2bc1f4af1ef2eab53f1a66b0787bb00cabdeeefb3dcf69864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301104849146100465780632250226814610076578063b08328b414610092575b600080fd5b610060600480360381019061005b9190610565565b6100c2565b60405161006d9190610650565b60405180910390f35b610090600480360381019061008b91906106a8565b610248565b005b6100ac60048036038101906100a791906106e8565b610470565b6040516100b99190610737565b60405180910390f35b606060008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561012657610125610752565b5b6040519080825280602002602001820160405280156101545781602001602082028036833780820191505090505b50905060005b8281101561023d576000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106101b2576101b1610781565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106101f0576101ef610781565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080610235906107df565b91505061015a565b508092505050919050565b60008282604051610258906104f5565b610263929190610836565b604051809103906000f08015801561027f573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16638863dd1a336040518263ffffffff1660e01b81526004016102bb9190610737565b600060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa01c8e2b0a81830c2e4e199b4cb98ece9d41443b7f9ef51cbb778f0fa13b019d336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050836040516104639392919061085f565b60405180910390a1505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106104c2576104c1610781565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6118cd8061089783390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053282610507565b9050919050565b61054281610527565b811461054d57600080fd5b50565b60008135905061055f81610539565b92915050565b60006020828403121561057b5761057a610502565b5b600061058984828501610550565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6105c781610527565b82525050565b60006105d983836105be565b60208301905092915050565b6000602082019050919050565b60006105fd82610592565b610607818561059d565b9350610612836105ae565b8060005b8381101561064357815161062a88826105cd565b9750610635836105e5565b925050600181019050610616565b5085935050505092915050565b6000602082019050818103600083015261066a81846105f2565b905092915050565b6000819050919050565b61068581610672565b811461069057600080fd5b50565b6000813590506106a28161067c565b92915050565b600080604083850312156106bf576106be610502565b5b60006106cd85828601610693565b92505060206106de85828601610693565b9150509250929050565b600080604083850312156106ff576106fe610502565b5b600061070d85828601610550565b925050602061071e85828601610693565b9150509250929050565b61073181610527565b82525050565b600060208201905061074c6000830184610728565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ea82610672565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361081c5761081b6107b0565b5b600182019050919050565b61083081610672565b82525050565b600060408201905061084b6000830185610827565b6108586020830184610827565b9392505050565b60006060820190506108746000830186610728565b6108816020830185610827565b61088e6040830184610728565b94935050505056fe60c06040523480156200001157600080fd5b50604051620018cd380380620018cd8339818101604052810190620000379190620000d0565b81608081815250508060a0818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000117565b600080fd5b6000819050919050565b620000aa8162000095565b8114620000b657600080fd5b50565b600081519050620000ca816200009f565b92915050565b60008060408385031215620000ea57620000e962000090565b5b6000620000fa85828601620000b9565b92505060206200010d85828601620000b9565b9150509250929050565b60805160a0516117906200013d6000396000610be7015260006107d601526117906000f3fe6080604052600436106100e85760003560e01c80639fd813e31161008a578063c7abca4711610059578063c7abca47146102c1578063d7bb99ba146102fe578063e4d89cf614610308578063fd6bc8b814610345576100e8565b80639fd813e314610219578063af157c1914610244578063b93863df1461026f578063ba56585914610298576100e8565b80634b73212b116100c65780634b73212b1461015f5780637018a7af1461019c57806372b47b84146101c55780638863dd1a146101f0576100e8565b806309d387da146100ed5780630c4f65bd146101185780632e1a7d4d14610143575b600080fd5b3480156100f957600080fd5b50610102610370565b60405161010f9190611234565b60405180910390f35b34801561012457600080fd5b5061012d610378565b60405161013a9190611290565b60405180910390f35b61015d600480360381019061015891906112dc565b6103a2565b005b34801561016b57600080fd5b5061018660048036038101906101819190611335565b6106d4565b6040516101939190611234565b60405180910390f35b3480156101a857600080fd5b506101c360048036038101906101be91906112dc565b61071c565b005b3480156101d157600080fd5b506101da6107d2565b6040516101e79190611234565b60405180910390f35b3480156101fc57600080fd5b5061021760048036038101906102129190611335565b6107fa565b005b34801561022557600080fd5b5061022e6108fe565b60405161023b9190611234565b60405180910390f35b34801561025057600080fd5b50610259610908565b6040516102669190611420565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190611442565b610996565b005b3480156102a457600080fd5b506102bf60048036038101906102ba91906114a7565b610b4a565b005b3480156102cd57600080fd5b506102e860048036038101906102e39190611335565b610bcd565b6040516102f59190611234565b60405180910390f35b610306610be5565b005b34801561031457600080fd5b5061032f600480360381019061032a9190611335565b610def565b60405161033c9190611234565b60405180910390f35b34801561035157600080fd5b5061035a610e37565b6040516103679190611234565b60405180910390f35b600047905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610429576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806104338161071c565b60006002811115610447576104466114e7565b5b6104716003838154811061045e5761045d611516565b5b9060005260206000209060080201610e44565b6002811115610483576104826114e7565b5b036104ba576040517fbae63cc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002808111156104cd576104cc6114e7565b5b6104f7600383815481106104e4576104e3611516565b5b9060005260206000209060080201610e44565b6002811115610509576105086114e7565b5b03610540576040517f3db289e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061056c6003848154811061055957610558611516565b5b9060005260206000209060080201610e5f565b9050804710156105a8576040517f57d5fa0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516105f090611576565b60006040518083038185875af1925050503d806000811461062d576040519150601f19603f3d011682016040523d82523d6000602084013e610632565b606091505b505090508061066d576040517f4c3ac88a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106976003858154811061068457610683611516565b5b9060005260206000209060080201610e6d565b7f78607c3338a50a97f0960b9ebb80a74d63115b7f462a4ea45c55abb0e5a36563826040516106c69190611234565b60405180910390a150505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107466003828154811061073357610732611516565b5b9060005260206000209060080201610e8d565b7f53d354f890b3877b85a588db153bbbce1a4b7c3fd4008a48294f78f13a13524a816001600281111561077c5761077b6114e7565b5b6107a66003858154811061079357610792611516565b5b9060005260206000209060080201610e44565b60028111156107b8576107b76114e7565b5b146040516107c79291906115a6565b60405180910390a150565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610881576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6733826040516108f39291906115cf565b60405180910390a150565b6000600154905090565b6060600480548060200260200160405190810160405280929190818152602001828054801561098c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610942575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1d576040517fb75c8fb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036001816001815401808255809150500390600052602060002090600802019050828160010181905550818160020181905550428160030181905550600081600501819055506000816006018190555060008160070160016101000a81548160ff021916908315150217905550308160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548160ff02191690836002811115610af857610af76114e7565b5b02179055507fa5f7f4c8f7ba98ee825a5d8b155830a9dd4e7d29fcc431c6c3bcce27776c27846001600380549050610b309190611627565b604051610b3d9190611234565b60405180910390a1505050565b6000610b996000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612710600154610f94565b9050610bc860038481548110610bb257610bb1611516565b5b9060005260206000209060080201833384610ffb565b505050565b60006020528060005260406000206000915090505481565b7f0000000000000000000000000000000000000000000000000000000000000000341015610c3f576040517f0cb8feec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1634604051610c6590611576565b60006040518083038185875af1925050503d8060008114610ca2576040519150601f19603f3d011682016040523d82523d6000602084013e610ca7565b606091505b5050905080610ce2576040517f27b8c0b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f4a0f31347e3bcd7ca4807151e54057b91971fdf592fcd3056a22fa1236dea3a23334604051610d1392919061165b565b60405180910390a1346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d699190611684565b925050819055503460016000828254610d829190611684565b925050819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600480549050905090565b60008160070160009054906101000a900460ff169050919050565b600081600201549050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b8060016000610e9b836111dc565b90508115610ee3576000811115610ede576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f1e565b60008103610f1d576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b836006015484600501541115610f605760018460070160006101000a81548160ff02191690836002811115610f5657610f556114e7565b5b0217905550610f8e565b60028460070160006101000a81548160ff02191690836002811115610f8857610f876114e7565b5b02179055505b50505050565b6000818385610fa391906116b8565b1015610fdb576040517f5bc8727400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818385610fe891906116b8565b610ff29190611729565b90509392505050565b83600080611008836111dc565b9050811561105057600081111561104b576040517f1638298000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61108b565b6000810361108a576040517fc1ae823a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b8660000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611111576040517fd2383bdc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600181111561117f5761117e6114e7565b5b866001811115611192576111916114e7565b5b036111b757838760050160008282546111ab9190611684565b925050819055506111d3565b838760060160008282546111cb9190611684565b925050819055505b50505050505050565b600080826001015483600301546111f39190611684565b9050804210611206576000915050611216565b42816112129190611627565b9150505b919050565b6000819050919050565b61122e8161121b565b82525050565b60006020820190506112496000830184611225565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127a8261124f565b9050919050565b61128a8161126f565b82525050565b60006020820190506112a56000830184611281565b92915050565b600080fd5b6112b98161121b565b81146112c457600080fd5b50565b6000813590506112d6816112b0565b92915050565b6000602082840312156112f2576112f16112ab565b5b6000611300848285016112c7565b91505092915050565b6113128161126f565b811461131d57600080fd5b50565b60008135905061132f81611309565b92915050565b60006020828403121561134b5761134a6112ab565b5b600061135984828501611320565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113978161126f565b82525050565b60006113a9838361138e565b60208301905092915050565b6000602082019050919050565b60006113cd82611362565b6113d7818561136d565b93506113e28361137e565b8060005b838110156114135781516113fa888261139d565b9750611405836113b5565b9250506001810190506113e6565b5085935050505092915050565b6000602082019050818103600083015261143a81846113c2565b905092915050565b60008060408385031215611459576114586112ab565b5b6000611467858286016112c7565b9250506020611478858286016112c7565b9150509250929050565b6002811061148f57600080fd5b50565b6000813590506114a181611482565b92915050565b600080604083850312156114be576114bd6112ab565b5b60006114cc858286016112c7565b92505060206114dd85828601611492565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b6000611560600083611545565b915061156b82611550565b600082019050919050565b600061158182611553565b9150819050919050565b60008115159050919050565b6115a08161158b565b82525050565b60006040820190506115bb6000830185611225565b6115c86020830184611597565b9392505050565b60006040820190506115e46000830185611281565b6115f16020830184611281565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116328261121b565b915061163d8361121b565b9250828203905081811115611655576116546115f8565b5b92915050565b60006040820190506116706000830185611281565b61167d6020830184611225565b9392505050565b600061168f8261121b565b915061169a8361121b565b92508282019050808211156116b2576116b16115f8565b5b92915050565b60006116c38261121b565b91506116ce8361121b565b92508282026116dc8161121b565b915082820484148315176116f3576116f26115f8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117348261121b565b915061173f8361121b565b92508261174f5761174e6116fa565b5b82820490509291505056fea2646970667358221220834c4c17a46ad4fa253034586d20668a3eaeea92a28efeef77bf76cf57b3b54c64736f6c63430008110033a2646970667358221220b6a6509b569038e1c2bc1f4af1ef2eab53f1a66b0787bb00cabdeeefb3dcf69864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 534,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaigns",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_contract(Campaign)515)dyn_storage)"
      },
      {
        "astId": 537,
        "contract": "contracts/CrowdFunding.sol:CrowdFunding",
        "label": "s_campaignCreaters",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(Campaign)515)dyn_storage": {
        "base": "t_contract(Campaign)515",
        "encoding": "dynamic_array",
        "label": "contract Campaign[]",
        "numberOfBytes": "32"
      },
      "t_contract(Campaign)515": {
        "encoding": "inplace",
        "label": "contract Campaign",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(Campaign)515)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Campaign[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(Campaign)515)dyn_storage"
      }
    }
  }
}